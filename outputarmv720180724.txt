🕛 > 🕤 Arch Linux in Termux PRoot is installed.  Configuring and updating Arch Linux 📲

:: Removing redundant packages...
checking dependencies...

Packages (7) dhcpcd-7.0.4-1  mkinitcpio-24-2  netctl-1.17-1
             systemd-sysvcompat-239.0-2  linux-armv7-4.17.6-1
             linux-firmware-20180606.d114732-1  systemd-239.0-2

Total Removed Size:  388.62 MiB

:: Do you want to remove these packages? [Y/n]
:: Processing package changes...
(1/7) removing systemd-sysvcompat                  [######################] 100%
(2/7) removing netctl                              [######################] 100%
(3/7) removing dhcpcd                              [######################] 100%
(4/7) removing linux-armv7                         [######################] 100%
(5/7) removing mkinitcpio                          [######################] 100%
(6/7) removing systemd                             [######################] 100%
(7/7) removing linux-firmware                      [######################] 100%
==> Running ./root/bin/keys
When gpg: Generating pacman keyring master key appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.

The program pacman-key will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When gpg: Generating pacman keyring master key appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling the device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  Use bash ~/arch/bin/we in a new Termux session to and watch entropy on device.

==> Running pacman-key --init…
==> Updating trust database...

==> Running pacman -S archlinux-keyring --noconfirm --color=always…
resolving dependencies...
looking for conflicting packages...

Packages (1) archlinux-keyring-20180627-1

Total Download Size:   0.58 MiB
Total Installed Size:  0.83 MiB

:: Proceed with installation? [Y/n]
:: Retrieving packages...
 archlinux-keyring-2...   597.4 KiB  10.6K/s 00:57 [######################] 100%
(1/1) checking keys in keyring                     [######################] 100%
downloading required keys...
:: Import PGP key 4096R/68B3537F39A313B3E574D06777193F152BDBE6A6, "Arch Linux ARM Build System <builder@archlinuxarm.org>", created: 2014-01-18? [Y/n]
(1/1) checking package integrity                   [######################] 100%
:: File /var/cache/pacman/pkg/archlinux-keyring-20180627-1-any.pkg.tar.xz is corrupted (invalid or corrupted package (PGP signature)).
Do you want to delete it? [Y/n]
Errors occurred, no packages were upgraded.

When Appending keys from archlinux.gpg appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.

The program pacman-key will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When Appending keys from archlinux.gpg appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling the device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  Use bash ~/arch/bin/we in a new Termux session to watch entropy on device.

==> Running pacman-key --populate…
==> Appending keys from archlinuxarm.gpg...
==> Locally signing trusted keys in keyring...
  -> Locally signing key 02922214DE8981D14DC2ACABBC704E86B823CD25...
  -> Locally signing key 69DD6C8FD314223E14362848BF7EEF7A9C6B5765...
  -> Locally signing key 9D22B7BB678DC056B1F7723CB55C5315DCD9EE1A...
==> Importing owner trust values...
==> Updating trust database...

==> Running pacman -Ss keyring --color=always…
core/archlinux-keyring 20180627-1
    Arch Linux PGP keyring
core/archlinuxarm-keyring 20140119-1 [installed]
    Arch Linux ARM PGP keyring
extra/gnome-keyring 1:3.28.2-1 (gnome)
    Stores passwords and encryption keys
extra/libgnome-keyring 3.12.0-3
    GNOME keyring client library
extra/python2-gnomekeyring 2.32.0-17
    Python bindings for libgnome-keyring
community/debian-archive-keyring 2017.7-1
    GnuPG archive keys of the Debian archive
community/gnome-keyring-sharp 1.0.2-6
    A fully managed implementation of libgnome-keyring
community/jetring 0.25-1
    gpg keyring maintenance using changesets
community/python-keyring 13.2.1-1
    Store and access your passwords safely.
community/python-keyrings-alt 1:3.1-1
    Alternate keyring implementations
community/ubuntu-keyring 2018.02.28-1
    GnuPG keys of the Ubuntu archive


TermuxArch Keys: DONE 🏁

:: Synchronizing package databases...
 core                     213.3 KiB  8.41K/s 00:25 [######################] 100%
 extra                      2.2 MiB  10.1K/s 03:48 [######################] 100%
 community                  4.7 MiB  14.1K/s 05:40 [######################] 100%
 alarm                    111.2 KiB  4.65K/s 00:24 [######################] 100%
 aur                        6.1 KiB  75.8K/s 00:00 [######################] 100%
:: Starting full system upgrade...
resolving dependencies...
looking for conflicting packages...

Packages (11) device-mapper-2.02.180-1  gnupg-2.2.9-1  gnutls-3.5.19-1
              libgpg-error-1.32-1  libnftnl-1.1.1-1  libutil-linux-2.32.1-1
              lvm2-2.02.180-1  npth-1.6-1  pacman-mirrorlist-20180722-1
              pciutils-3.6.1-1  util-linux-2.32.1-1

Total Download Size:    7.88 MiB
Total Installed Size:  34.30 MiB
Net Upgrade Size:       0.02 MiB

:: Proceed with installation? [Y/n]
:: Retrieving packages...
 libgpg-error-1.32-1...   178.3 KiB  10.5K/s 00:17 [######################] 100%
 device-mapper-2.02....   255.1 KiB  10.0K/s 00:25 [######################] 100%
 npth-1.6-1-armv7h         12.2 KiB  13.2K/s 00:01 [######################] 100%
 gnutls-3.5.19-1-armv7h     2.2 MiB  10.1K/s 03:39 [######################] 100%
 libutil-linux-2.32....   304.4 KiB  6.90K/s 00:44 [######################] 100%
 gnupg-2.2.9-1-armv7h    1877.7 KiB  9.15K/s 03:25 [######################] 100%
 libnftnl-1.1.1-1-armv7h   48.7 KiB  8.99K/s 00:05 [######################] 100%
 lvm2-2.02.180-1-armv7h  1200.7 KiB  10.2K/s 01:58 [######################] 100%
 pacman-mirrorlist-2...     2.6 KiB  88.2K/s 00:00 [######################] 100%
 pciutils-3.6.1-1-armv7h   76.0 KiB  8.54K/s 00:09 [######################] 100%
 util-linux-2.32.1-1...  1896.0 KiB  10.0K/s 03:09 [######################] 100%
(11/11) checking keys in keyring                   [######################] 100%
(11/11) checking package integrity                 [######################] 100%
(11/11) loading package files                      [######################] 100%
(11/11) checking for file conflicts                [######################] 100%
(11/11) checking available disk space              [######################] 100%
:: Processing package changes...
( 1/11) upgrading libgpg-error                     [######################] 100%
( 2/11) upgrading device-mapper                    [######################] 100%
( 3/11) upgrading npth                             [######################] 100%
( 4/11) upgrading gnutls                           [######################] 100%
( 5/11) upgrading libutil-linux                    [######################] 100%
( 6/11) upgrading gnupg                            [######################] 100%
( 7/11) upgrading libnftnl                         [######################] 100%
( 8/11) upgrading lvm2                             [######################] 100%
( 9/11) upgrading pacman-mirrorlist                [######################] 100%
(10/11) upgrading pciutils                         [######################] 100%
(11/11) upgrading util-linux                       [######################] 100%
:: Running post-transaction hooks...
(1/1) Updating the info directory file...

==> Generating locales...
  en_US.UTF-8... done
Generation complete.

 🕛 > 🕙 Releasing termux-wake-lock: DONE

 🕛 > 🕥 Use startarch to launch Arch Linux in Termux PRoot.  Alternatively, run ~/arch/startarch in a BASH shell to start Arch Linux in Termux PRoot for future sessions.  See startarch help for usage information.

 🕛 > 🕦 startarch copied to /data/data/com.termux/files/home/bin.

 🕛 = 🕛 Information about "Starting Arch Linux from Termux?" at https://github.com/sdrausty/TermuxArch/issues/25.  Use tour to run a very short tour to get to know the new Arch Linux in Termux PRoot environment you just set up a little bit better.  If there was more than one error during the update procedure and you would like to refresh the installation, use setupTermuxArch.sh refresh.  This will update and recreate the configuration provided.  The TermuxArch command keys helps install and generate Arch Linux keyring keys.

Arch Linux in Termux PRoot is installed in /data/data/com.termux/files/home/arch.  This project is in active development and contributions are welcome; See https://sdrausty.github.io/TermuxArch/CONTRIBUTORS for information.  The documentation repository for TermuxArch https://sdrausty.github.io/TermuxArch/docs/ is a Termux Arch submodule that is located at https://github.com/sdrausty/docsTermuxArch.  Pull requests and contributions through the issues pages are open to improve the ux and this Termux PRoot installation script.

Use ~/arch/startarch and startarch in a BASH shell to launch Arch Linux in Termux PRoot for future sessions.  If you are new to *nix, http://tldp.org has *nix documentation.  See https://wiki.archlinux.org/index.php/IRC_channel for available Arch Linux IRC channels.

Welcome to Arch Linux in Termux!
Install a package: pacman -S package
More  information: pacman -[D|F|Q|R|S|T|U]h
Search   packages: pacman -Ss query
Upgrade  packages: pacman -Syu

Chat: https://webchat.freenode.net/ #termux
Help: info query and man query
IRC:  wiki.archlinux.org/index.php/IRC_channel

[13:12 arch ]$ e

Arch Linux in Termux PRoot is installed in /data/data/com.termux/files/home/arch.  This project is in active development and contributions are welcome; See https://sdrausty.github.io/TermuxArch/CONTRIBUTORS for information.  The documentation repository for TermuxArch https://sdrausty.github.io/TermuxArch/docs/ is a Termux Arch submodule that is located at https://github.com/sdrausty/docsTermuxArch.  Pull requests and contributions through the issues pages are open to improve the ux and this Termux PRoot installation script.

Use ~/arch/startarch and startarch in a BASH shell to launch Arch Linux in Termux PRoot for future sessions.  If you are new to *nix, http://tldp.org has *nix documentation.  See https://wiki.archlinux.org/index.php/IRC_channel for available Arch Linux IRC channels.

Usage:  startarch Start Arch Linux as root.  This account should only be reserved for system administration.

        startarch command command Run Arch Linux command from Termux as root user.

        startarch login user Login as user.  Use addauser user first to create a user and the user's home directory.

        startarch raw Construct the startarch proot statement.  For example startarch raw su - user will login to Arch Linux as user.  Use addauser user first to create a user and the user's home directory.

        startarch su user command Login as user and execute command.  Use addauser user first to create a user and the user's home directory.


Thank you for using setupTermuxArch.sh v1.6 🏁

$ ./setupTermuxArch.sh p

Uninstall /data/data/com.termux/files/home/arch? [Y|n]
Uninstalling /data/data/com.termux/files/home/arch…
Uninstalling /data/data/com.termux/files/usr/bin/startarch: nothing to do for /data/data/com.termux/files/usr/bin/startarch.
Uninstalling /data/data/com.termux/files/home/arch: Done
./setupTermuxArch.sh: line 401: startarch: command not found
$ grep "n help" setupTermuxArch.sh
        $startbin help
# [help|?] Display built-in help.
$ !mk
mkdir arch
$ !cp
cp ArchLinuxARM-armv7-latest.tar.gz* arch/
$ ./setupTermuxArch.sh

TermuxArch: DIRECTORY WARNING!  /data/data/com.termux/files/home/arch/ directory detected.  Termux Arch installation shall continue.  If in doubt, answer yes.

Uninstall /data/data/com.termux/files/home/arch? [Y|n] n

TermuxArch: FREE SPACE WARNING!  Start thinking about cleaning out some stuff.  985196 1K-blocks of free user space is available on this device.  The recommended minimum to install Arch Linux in Termux PRoot for armv7 is 1.25G of free user space.

 🕛 > 🕛 TermuxArch v1.6 will attempt to install Linux in /data/data/com.termux/files/home/arch.  Arch Linux in Termux PRoot will be available upon successful completion.  To run this BASH script again, use `!!`.  Ensure background data is not restricted.  Check the wireless connection if you do not see one o'clock 🕐 below.  Checking prerequisites…

 🕛 > 🕧 Prerequisites: OK  Downloading TermuxArch…

setupTermuxArch.sha 100%[===================>]     153  --.-KB/s    in 0s
setupTermuxArch.tar 100%[===================>]  19.38K  39.1KB/s    in 0.5s

 🕛 > 🕐 TermuxArch download: OK

setupTermuxArch.sh: UPDATED
TermuxArch: RESTARTED

TermuxArch: DIRECTORY WARNING!  /data/data/com.termux/files/home/arch/ directory detected.  Termux Arch installation shall continue.  If in doubt, answer yes.

Uninstall /data/data/com.termux/files/home/arch? [Y|n] n

TermuxArch: FREE SPACE WARNING!  Start thinking about cleaning out some stuff.  985168 1K-blocks of free user space is available on this device.  The recommended minimum to install Arch Linux in Termux PRoot for armv7 is 1.25G of free user space.

 🕛 > 🕛 TermuxArch v1.6 will attempt to install Linux in /data/data/com.termux/files/home/arch.  Arch Linux in Termux PRoot will be available upon successful completion.  To run this BASH script again, use `!!`.  Ensure background data is not restricted.  Check the wireless connection if you do not see one o'clock 🕐 below.  Checking prerequisites…

 🕛 > 🕧 Prerequisites: OK  Downloading TermuxArch…

setupTermuxArch.sha 100%[===================>]     153  --.-KB/s    in 0s
setupTermuxArch.tar 100%[===================>]  19.38K  40.7KB/s    in 0.5s

 🕛 > 🕐 TermuxArch download: OK

 🕛 > 🕜 TermuxArch v1.6 integrity: OK

TermuxArch: FREE SPACE WARNING!  Start thinking about cleaning out some stuff.  985160 1K-blocks of free user space is available on this device.  The recommended minimum to install Arch Linux in Termux PRoot for armv7 is 1.25G of free user space.

 🕛 > 🕝 Detected armv7l GNU/Linux operating system.

 🕛 > 🕒 Activating termux-wake-lock: DONE

 🕛 > 🕞 Contacting worldwide mirror http://os.archlinuxarm.org/: DONE

 🕛 > 🕓 Downloading the checksum file and ArchLinuxARM-armv7-latest.tar.gz from the geographically local mirror http://fl.us.mirror.archlinuxarm.org/.  If contact with the local mirror is not successful, run bash setupTermuxArch.sh again.  Should the worldwide mirror not provide another geographically nearby server after a couple of attempts, use bash setupTermuxArch.sh manual after locating a local mirror from the Internet; See bash setupTermuxArch.sh help for additional options.  Download of ArchLinuxARM-armv7-latest.tar.gz pending Internet connection:


 🕛 > 🕠 Checking download integrity with Termux busybox md5sum.  This may take a little while:

 🕛 > 🕕 System image file download integrity: OK

 🕛 > 🕡 Uncompressing ArchLinuxARM-armv7-latest.tar.gz into /data/data/com.termux/files/home/arch.  The option to create Arch Linux system users is available through addauser and addauserps.  Arch Linux user login from Termux with startarch is now implemented.  See Ability for Scripts to Launch Commands for Arch Linux in Termux PRoot on Device https://github.com/sdrausty/TermuxArch/issues/54 for more information about these brand new options.  Additional features of TermuxArch are also listed at https://github.com/sdrausty/TermuxArch/releases.

While waiting, you can use df, du -hs, htop, ps, top and watch in a new Termux session to watch the uncompressing while the session completes.  Use info query and man query to learn more about your Linux system in the palm of your hand.  See The Linux Documentation Project http://tldp.org to learn more about Linux and CLI commands.  Uncompressing ArchLinuxARM-armv7-latest.tar.gz will take a long time; Be patient:

 🕛 > 🕘 Cleaning up installation files: DONE

 🕛 > 🕤 Arch Linux in Termux PRoot is installed.  Configuring and updating Arch Linux 📲

:: Removing redundant packages...
checking dependencies...

Packages (7) dhcpcd-7.0.4-1  mkinitcpio-24-2  netctl-1.17-1
             systemd-sysvcompat-239.0-2  linux-armv7-4.17.6-1
             linux-firmware-20180606.d114732-1  systemd-239.0-2

Total Removed Size:  388.62 MiB

:: Do you want to remove these packages? [Y/n]
:: Processing package changes...
(1/7) removing systemd-sysvcompat                  [######################] 100%
(2/7) removing netctl                              [######################] 100%
(3/7) removing dhcpcd                              [######################] 100%
(4/7) removing linux-armv7                         [######################] 100%
(5/7) removing mkinitcpio                          [######################] 100%
(6/7) removing systemd                             [######################] 100%
(7/7) removing linux-firmware                      [######################] 100%
==> Running ./root/bin/keys…
When gpg: Generating pacman keyring master key appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.

The program pacman-key will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When gpg: Generating pacman keyring master key appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling the device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  Use bash ~/arch/bin/we in a new Termux session to and watch entropy on device.

==> Running pacman-key --init…
==> Updating trust database...

==> Running pacman -S archlinux-keyring --noconfirm --color=always…
resolving dependencies...
looking for conflicting packages...

Packages (1) archlinux-keyring-20180627-1

Total Download Size:   0.58 MiB
Total Installed Size:  0.83 MiB

:: Proceed with installation? [Y/n]
:: Retrieving packages...
 archlinux-keyring-2...   597.4 KiB  7.14K/s 01:24 [######################] 100%
(1/1) checking keys in keyring                     [######################] 100%
downloading required keys...
:: Import PGP key 4096R/68B3537F39A313B3E574D06777193F152BDBE6A6, "Arch Linux ARM Build System <builder@archlinuxarm.org>", created: 2014-01-18? [Y/n]
Errors occurred, no packages were upgraded.

When Appending keys from archlinux.gpg appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.

The program pacman-key will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When Appending keys from archlinux.gpg appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling the device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  Use bash ~/arch/bin/we in a new Termux session to watch entropy on device.

==> Running pacman-key --populate…
==> Appending keys from archlinuxarm.gpg...
==> Locally signing trusted keys in keyring...
  -> Locally signing key 02922214DE8981D14DC2ACABBC704E86B823CD25...
  -> Locally signing key 69DD6C8FD314223E14362848BF7EEF7A9C6B5765...
  -> Locally signing key 9D22B7BB678DC056B1F7723CB55C5315DCD9EE1A...
==> Importing owner trust values...
==> Updating trust database...

==> Running pacman -Ss keyring --color=always…
core/archlinux-keyring 20180627-1
    Arch Linux PGP keyring
core/archlinuxarm-keyring 20140119-1 [installed]
    Arch Linux ARM PGP keyring
extra/gnome-keyring 1:3.28.2-1 (gnome)
    Stores passwords and encryption keys
extra/libgnome-keyring 3.12.0-3
    GNOME keyring client library
extra/python2-gnomekeyring 2.32.0-17
    Python bindings for libgnome-keyring
community/debian-archive-keyring 2017.7-1
    GnuPG archive keys of the Debian archive
community/gnome-keyring-sharp 1.0.2-6
    A fully managed implementation of libgnome-keyring
community/jetring 0.25-1
    gpg keyring maintenance using changesets
community/python-keyring 13.2.1-1
    Store and access your passwords safely.
community/python-keyrings-alt 1:3.1-1
    Alternate keyring implementations
community/ubuntu-keyring 2018.02.28-1
    GnuPG keys of the Ubuntu archive


TermuxArch Keys: DONE 🏁

:: Synchronizing package databases...
 core                     213.3 KiB  7.76K/s 00:27 [######################] 100%
 extra                      2.2 MiB  10.2K/s 03:46 [######################] 100%
 community                  4.7 MiB  14.6K/s 05:28 [######################] 100%
 alarm                    111.2 KiB  7.82K/s 00:14 [######################] 100%
 aur                        6.1 KiB  67.4K/s 00:00 [######################] 100%
:: Starting full system upgrade...
resolving dependencies...
looking for conflicting packages...

Packages (11) device-mapper-2.02.180-1  gnupg-2.2.9-1  gnutls-3.5.19-1
              libgpg-error-1.32-1  libnftnl-1.1.1-1  libutil-linux-2.32.1-1
              lvm2-2.02.180-1  npth-1.6-1  pacman-mirrorlist-20180722-1
              pciutils-3.6.1-1  util-linux-2.32.1-1

Total Download Size:    7.88 MiB
Total Installed Size:  34.30 MiB
Net Upgrade Size:       0.02 MiB

:: Proceed with installation? [Y/n]
:: Retrieving packages...
 libgpg-error-1.32-1...   178.3 KiB  11.0K/s 00:16 [######################] 100%
 device-mapper-2.02....   255.1 KiB  10.2K/s 00:25 [######################] 100%
 npth-1.6-1-armv7h         12.2 KiB  16.0K/s 00:01 [######################] 100%
 gnutls-3.5.19-1-armv7h     2.2 MiB  10.3K/s 03:36 [######################] 100%
 libutil-linux-2.32....   304.4 KiB  7.07K/s 00:43 [######################] 100%
 gnupg-2.2.9-1-armv7h    1877.7 KiB  10.1K/s 03:05 [######################] 100%
 libnftnl-1.1.1-1-armv7h   48.7 KiB  9.09K/s 00:05 [######################] 100%
 lvm2-2.02.180-1-armv7h  1200.7 KiB  10.1K/s 01:58 [######################] 100%
 pacman-mirrorlist-2...     2.6 KiB  66.1K/s 00:00 [######################] 100%
 pciutils-3.6.1-1-armv7h   76.0 KiB  7.46K/s 00:10 [######################] 100%
 util-linux-2.32.1-1...  1896.0 KiB  10.1K/s 03:07 [######################] 100%
(11/11) checking keys in keyring                   [######################] 100%
(11/11) checking package integrity                 [######################] 100%
(11/11) loading package files                      [######################] 100%
(11/11) checking for file conflicts                [######################] 100%
(11/11) checking available disk space              [######################] 100%
:: Processing package changes...
( 1/11) upgrading libgpg-error                     [######################] 100%
( 2/11) upgrading device-mapper                    [######################] 100%
( 3/11) upgrading npth                             [######################] 100%
( 4/11) upgrading gnutls                           [######################] 100%
( 5/11) upgrading libutil-linux                    [######################] 100%
( 6/11) upgrading gnupg                            [######################] 100%
( 7/11) upgrading libnftnl                         [######################] 100%
( 8/11) upgrading lvm2                             [######################] 100%
( 9/11) upgrading pacman-mirrorlist                [######################] 100%
(10/11) upgrading pciutils                         [######################] 100%
(11/11) upgrading util-linux                       [######################] 100%
:: Running post-transaction hooks...
(1/1) Updating the info directory file...

==> Generating locales...
  en_US.UTF-8... done
Generation complete.

 🕛 > 🕙 Releasing termux-wake-lock: DONE

 🕛 > 🕥 Use startarch to launch Arch Linux in Termux PRoot.  Alternatively, run ~/arch/startarch in a BASH shell to start Arch Linux in Termux PRoot for future sessions.  See startarch help for usage information.

 🕛 > 🕦 startarch copied to /data/data/com.termux/files/home/bin.

 🕛 = 🕛 Information about "Starting Arch Linux from Termux?" at https://github.com/sdrausty/TermuxArch/issues/25.  Use tour to run a very short tour to get to know the new Arch Linux in Termux PRoot environment you just set up a little bit better.  If there was more than one error during the update procedure and you would like to refresh the installation, use setupTermuxArch.sh refresh.  This will update and recreate the configuration provided.  The TermuxArch command keys helps install and generate Arch Linux keyring keys.

Arch Linux in Termux PRoot is installed in /data/data/com.termux/files/home/arch.  This project is in active development and contributions are welcome; See https://sdrausty.github.io/TermuxArch/CONTRIBUTORS for information.  The documentation repository for TermuxArch https://sdrausty.github.io/TermuxArch/docs/ is a Termux Arch submodule that is located at https://github.com/sdrausty/docsTermuxArch.  Pull requests and contributions through the issues pages are open to improve the ux and this Termux PRoot installation script.

Use ~/arch/startarch and startarch in a BASH shell to launch Arch Linux in Termux PRoot for future sessions.  If you are new to *nix, http://tldp.org has *nix documentation.  See https://wiki.archlinux.org/index.php/IRC_channel for available Arch Linux IRC channels.

Welcome to Arch Linux in Termux!
Install a package: pacman -S package
More  information: pacman -[D|F|Q|R|S|T|U]h
Search   packages: pacman -Ss query
Upgrade  packages: pacman -Syu

Chat: https://webchat.freenode.net/ #termux
Help: info query and man query
IRC:  wiki.archlinux.org/index.php/IRC_channel

[14:03 arch ]$ e

Arch Linux in Termux PRoot is installed in /data/data/com.termux/files/home/arch.  This project is in active development and contributions are welcome; See https://sdrausty.github.io/TermuxArch/CONTRIBUTORS for information.  The documentation repository for TermuxArch https://sdrausty.github.io/TermuxArch/docs/ is a Termux Arch submodule that is located at https://github.com/sdrausty/docsTermuxArch.  Pull requests and contributions through the issues pages are open to improve the ux and this Termux PRoot installation script.

Use ~/arch/startarch and startarch in a BASH shell to launch Arch Linux in Termux PRoot for future sessions.  If you are new to *nix, http://tldp.org has *nix documentation.  See https://wiki.archlinux.org/index.php/IRC_channel for available Arch Linux IRC channels.

Usage:  startarch Start Arch Linux as root.  This account should only be reserved for system administration.

        startarch command command Run Arch Linux command from Termux as root user.

        startarch login user Login as user.  Use addauser user first to create a user and the user's home directory.

        startarch raw Construct the startarch proot statement.  For example startarch raw su - user will login to Arch Linux as user.  Use addauser user first to create a user and the user's home directory.

        startarch su user command Login as user and execute command.  Use addauser user first to create a user and the user's home directory.


Thank you for using setupTermuxArch.sh v1.6 🏁

int caught
$ p
/data/data/com.termux/files/home
$ ./setupTermuxArch.sh p

Uninstall /data/data/com.termux/files/home/arch? [Y|n]
Uninstalling /data/data/com.termux/files/home/arch…
Uninstalling /data/data/com.termux/files/usr/bin/startarch: nothing to do for /data/data/com.termux/files/usr/bin/startarch.
Uninstalling /data/data/com.termux/files/home/arch: Done
int caught
$ !mk
mkdir arch
$ df /data
Filesystem           1K-blocks      Used Available Use% Mounted on
/dev/block/bootdevice/by-name/userdata
                       3681976   2168668   1359708  61% /data
$ !cp
cp ArchLinuxARM-armv7-latest.tar.gz* arch/
$ ./setupTermuxArch.sh

TermuxArch: DIRECTORY WARNING!  /data/data/com.termux/files/home/arch/ directory detected.  Termux Arch installation shall continue.  If in doubt, answer yes.

Uninstall /data/data/com.termux/files/home/arch? [Y|n] n

TermuxArch: FREE SPACE WARNING!  Start thinking about cleaning out some stuff.  984116 1K-blocks of free user space is available on this device.  The recommended minimum to install Arch Linux in Termux PRoot for armv7 is 1.25G of free user space.

 🕛 > 🕛 TermuxArch v1.6 will attempt to install Linux in /data/data/com.termux/files/home/arch.  Arch Linux in Termux PRoot will be available upon successful completion.  To run this BASH script again, use `!!`.  Ensure background data is not restricted.  Check the wireless connection if you do not see one o'clock 🕐 below.  Checking prerequisites…

 🕛 > 🕧 Prerequisites: OK  Downloading TermuxArch…

setupTermuxArch.sha 100%[===================>]     153  --.-KB/s    in 0s
setupTermuxArch.tar 100%[===================>]  19.38K  44.4KB/s    in 0.4s

 🕛 > 🕐 TermuxArch download: OK

setupTermuxArch.sh: UPDATED
TermuxArch: RESTARTED

TermuxArch: DIRECTORY WARNING!  /data/data/com.termux/files/home/arch/ directory detected.  Termux Arch installation shall continue.  If in doubt, answer yes.

Uninstall /data/data/com.termux/files/home/arch? [Y|n] n

TermuxArch: FREE SPACE WARNING!  Start thinking about cleaning out some stuff.  984088 1K-blocks of free user space is available on this device.  The recommended minimum to install Arch Linux in Termux PRoot for armv7 is 1.25G of free user space.

 🕛 > 🕛 TermuxArch v1.6 will attempt to install Linux in /data/data/com.termux/files/home/arch.  Arch Linux in Termux PRoot will be available upon successful completion.  To run this BASH script again, use `!!`.  Ensure background data is not restricted.  Check the wireless connection if you do not see one o'clock 🕐 below.  Checking prerequisites…

 🕛 > 🕧 Prerequisites: OK  Downloading TermuxArch…

setupTermuxArch.sha 100%[===================>]     153  --.-KB/s    in 0s
setupTermuxArch.tar 100%[===================>]  19.38K  45.1KB/s    in 0.4s

 🕛 > 🕐 TermuxArch download: OK

 🕛 > 🕜 TermuxArch v1.6 integrity: OK

TermuxArch: FREE SPACE WARNING!  Start thinking about cleaning out some stuff.  984080 1K-blocks of free user space is available on this device.  The recommended minimum to install Arch Linux in Termux PRoot for armv7 is 1.25G of free user space.

 🕛 > 🕝 Detected armv7l GNU/Linux operating system.

 🕛 > 🕒 Activating termux-wake-lock: DONE

 🕛 > 🕞 Contacting worldwide mirror http://os.archlinuxarm.org/: DONE

 🕛 > 🕓 Downloading the checksum file and ArchLinuxARM-armv7-latest.tar.gz from the geographically local mirror http://fl.us.mirror.archlinuxarm.org/.  If contact with the local mirror is not successful, run bash setupTermuxArch.sh again.  Should the worldwide mirror not provide another geographically nearby server after a couple of attempts, use bash setupTermuxArch.sh manual after locating a local mirror from the Internet; See bash setupTermuxArch.sh help for additional options.  Download of ArchLinuxARM-armv7-latest.tar.gz pending Internet connection:


 🕛 > 🕠 Checking download integrity with Termux busybox md5sum.  This may take a little while:

 🕛 > 🕕 System image file download integrity: OK

 🕛 > 🕡 Uncompressing ArchLinuxARM-armv7-latest.tar.gz into /data/data/com.termux/files/home/arch.  The option to create Arch Linux system users is available through addauser and addauserps.  Arch Linux user login from Termux with startarch is now implemented.  See Ability for Scripts to Launch Commands for Arch Linux in Termux PRoot on Device https://github.com/sdrausty/TermuxArch/issues/54 for more information about these brand new options.  Additional features of TermuxArch are also listed at https://github.com/sdrausty/TermuxArch/releases.

While waiting, you can use df, du -hs, htop, ps, top and watch in a new Termux session to watch the uncompressing while the session completes.  Use info query and man query to learn more about your Linux system in the palm of your hand.  See The Linux Documentation Project http://tldp.org to learn more about Linux and CLI commands.  Uncompressing ArchLinuxARM-armv7-latest.tar.gz will take a long time; Be patient:

 🕛 > 🕘 Cleaning up installation files: DONE

 🕛 > 🕤 Arch Linux in Termux PRoot is installed.  Configuring and updating Arch Linux 📲

:: Removing redundant packages...
checking dependencies...

Packages (7) dhcpcd-7.0.4-1  mkinitcpio-24-2  netctl-1.17-1
             systemd-sysvcompat-239.0-2  linux-armv7-4.17.6-1
             linux-firmware-20180606.d114732-1  systemd-239.0-2

Total Removed Size:  388.62 MiB

:: Do you want to remove these packages? [Y/n]
:: Processing package changes...
(1/7) removing systemd-sysvcompat                  [######################] 100%
(2/7) removing netctl                              [######################] 100%
(3/7) removing dhcpcd                              [######################] 100%
(4/7) removing linux-armv7                         [######################] 100%
(5/7) removing mkinitcpio                          [######################] 100%
(6/7) removing systemd                             [######################] 100%
(7/7) removing linux-firmware                      [######################] 100%
==> Running ./root/bin/keys…
When gpg: Generating pacman keyring master key appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.

The program pacman-key will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When gpg: Generating pacman keyring master key appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling the device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  Use bash ~/arch/bin/we in a new Termux session to and watch entropy on device.

==> Running pacman-key --init…
==> Updating trust database...

==> Running pacman -S archlinux-keyring --noconfirm --color=always…
resolving dependencies...
looking for conflicting packages...

Packages (1) archlinux-keyring-20180627-1

Total Download Size:   0.58 MiB
Total Installed Size:  0.83 MiB

:: Proceed with installation? [Y/n]
:: Retrieving packages...
 archlinux-keyring-2...   597.4 KiB  6.73K/s 01:29 [######################] 100%
(1/1) checking keys in keyring                     [######################] 100%
downloading required keys...
:: Import PGP key 4096R/68B3537F39A313B3E574D06777193F152BDBE6A6, "Arch Linux ARM Build System <builder@archlinuxarm.org>", created: 2014-01-18? [Y/n]
(1/1) checking package integrity                   [######################] 100%
:: File /var/cache/pacman/pkg/archlinux-keyring-20180627-1-any.pkg.tar.xz is corrupted (invalid or corrupted package (PGP signature)).
Do you want to delete it? [Y/n]
Errors occurred, no packages were upgraded.

When Appending keys from archlinux.gpg appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.

The program pacman-key will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When Appending keys from archlinux.gpg appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling the device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  Use bash ~/arch/bin/we in a new Termux session to watch entropy on device.

==> Running pacman-key --populate…
==> Appending keys from archlinuxarm.gpg...
==> Locally signing trusted keys in keyring...
  -> Locally signing key 02922214DE8981D14DC2ACABBC704E86B823CD25...
  -> Locally signing key 69DD6C8FD314223E14362848BF7EEF7A9C6B5765...
  -> Locally signing key 9D22B7BB678DC056B1F7723CB55C5315DCD9EE1A...
==> Importing owner trust values...
==> Updating trust database...

==> Running pacman -Ss keyring --color=always…
core/archlinux-keyring 20180627-1
    Arch Linux PGP keyring
core/archlinuxarm-keyring 20140119-1 [installed]
    Arch Linux ARM PGP keyring
extra/gnome-keyring 1:3.28.2-1 (gnome)
    Stores passwords and encryption keys
extra/libgnome-keyring 3.12.0-3
    GNOME keyring client library
extra/python2-gnomekeyring 2.32.0-17
    Python bindings for libgnome-keyring
community/debian-archive-keyring 2017.7-1
    GnuPG archive keys of the Debian archive
community/gnome-keyring-sharp 1.0.2-6
    A fully managed implementation of libgnome-keyring
community/jetring 0.25-1
    gpg keyring maintenance using changesets
community/python-keyring 13.2.1-1
    Store and access your passwords safely.
community/python-keyrings-alt 1:3.1-1
    Alternate keyring implementations
community/ubuntu-keyring 2018.02.28-1
    GnuPG keys of the Ubuntu archive


TermuxArch Keys: DONE 🏁

:: Synchronizing package databases...
 core                     213.3 KiB  7.66K/s 00:28 [######################] 100%
 alarm                    111.2 KiB  9.32K/s 00:12 [######################] 100%
 aur                        6.1 KiB  75.8K/s 00:00 [######################] 100%

==> Generating locales...
  en_US.UTF-8... done
Generation complete.

 🕛 > 🕙 Releasing termux-wake-lock: DONE

 🕛 > 🕥 Use startarch to launch Arch Linux in Termux PRoot.  Alternatively, run ~/arch/startarch in a BASH shell to start Arch Linux in Termux PRoot for future sessions.  See startarch help for usage information.

 🕛 > 🕦 startarch copied to /data/data/com.termux/files/home/bin.

 🕛 = 🕛 Information about "Starting Arch Linux from Termux?" at https://github.com/sdrausty/TermuxArch/issues/25.  Use tour to run a very short tour to get to know the new Arch Linux in Termux PRoot environment you just set up a little bit better.  If there was more than one error during the update procedure and you would like to refresh the installation, use setupTermuxArch.sh refresh.  This will update and recreate the configuration provided.  The TermuxArch command keys helps install and generate Arch Linux keyring keys.

Arch Linux in Termux PRoot is installed in /data/data/com.termux/files/home/arch.  This project is in active development and contributions are welcome; See https://sdrausty.github.io/TermuxArch/CONTRIBUTORS for information.  The documentation repository for TermuxArch https://sdrausty.github.io/TermuxArch/docs/ is a Termux Arch submodule that is located at https://github.com/sdrausty/docsTermuxArch.  Pull requests and contributions through the issues pages are open to improve the ux and this Termux PRoot installation script.

Use ~/arch/startarch and startarch in a BASH shell to launch Arch Linux in Termux PRoot for future sessions.  If you are new to *nix, http://tldp.org has *nix documentation.  See https://wiki.archlinux.org/index.php/IRC_channel for available Arch Linux IRC channels.

Welcome to Arch Linux in Termux!
Install a package: pacman -S package
More  information: pacman -[D|F|Q|R|S|T|U]h
Search   packages: pacman -Ss query
Upgrade  packages: pacman -Syu

Chat: https://webchat.freenode.net/ #termux
Help: info query and man query
IRC:  wiki.archlinux.org/index.php/IRC_channel

[15:14 arch ]$ pc
:: Synchronizing package databases...
 core is up to date
^Cxtra                    168.1 KiB  4.13K/s 08:34 [#---------------------]   7%
Interrupt signal received

[15:24 arch ]$ ^C
[15:24 arch ]$
[15:24 arch ]$ e

Arch Linux in Termux PRoot is installed in /data/data/com.termux/files/home/arch.  This project is in active development and contributions are welcome; See https://sdrausty.github.io/TermuxArch/CONTRIBUTORS for information.  The documentation repository for TermuxArch https://sdrausty.github.io/TermuxArch/docs/ is a Termux Arch submodule that is located at https://github.com/sdrausty/docsTermuxArch.  Pull requests and contributions through the issues pages are open to improve the ux and this Termux PRoot installation script.

Use ~/arch/startarch and startarch in a BASH shell to launch Arch Linux in Termux PRoot for future sessions.  If you are new to *nix, http://tldp.org has *nix documentation.  See https://wiki.archlinux.org/index.php/IRC_channel for available Arch Linux IRC channels.

Usage:  startarch Start Arch Linux as root.  This account should only be reserved for system administration.

        startarch command command Run Arch Linux command from Termux as root user.

        startarch login user Login as user.  Use addauser user first to create a user and the user's home directory.

        startarch raw Construct the startarch proot statement.  For example startarch raw su - user will login to Arch Linux as user.  Use addauser user first to create a user and the user's home directory.

        startarch su user command Login as user and execute command.  Use addauser user first to create a user and the user's home directory.


Thank you for using setupTermuxArch.sh v1.6 🏁

int caught
$ ./setupTermuxArch.sh p

Uninstall /data/data/com.termux/files/home/arch? [Y|n]
Uninstalling /data/data/com.termux/files/home/arch…
Uninstalling /data/data/com.termux/files/usr/bin/startarch: nothing to do for /data/data/com.termux/files/usr/bin/startarch.
Uninstalling /data/data/com.termux/files/home/arch: Done
$ grep trap setupTermuxArch.sh
trap finish SIGINT SIGTERM
$ ./setupTermuxArch.sh p

Uninstall /data/data/com.termux/files/home/arch? [Y|n]
Uninstalling /data/data/com.termux/files/home/arch…
Uninstalling /data/data/com.termux/files/usr/bin/startarch: nothing to do for /data/data/com.termux/files/usr/bin/startarch.
Uninstalling /data/data/com.termux/files/home/bin/startarch: nothing to do for /data/data/com.termux/files/home/bin/startarch.
Uninstalling /data/data/com.termux/files/home/arch: nothing to do for /data/data/com.termux/files/home/arch.
Uninstalling /data/data/com.termux/files/home/arch: Done
$ mkdir arch
$ cp ArchLinuxARM-armv7-latest.tar.gz* arch/
$ ./setupTermuxArch.sh

TermuxArch: DIRECTORY WARNING!  /data/data/com.termux/files/home/arch/ directory detected.  Termux Arch installation shall continue.  If in doubt, answer yes.

Uninstall /data/data/com.termux/files/home/arch? [Y|n] n

TermuxArch: FREE SPACE WARNING!  Start thinking about cleaning out some stuff.  983140 1K-blocks of free user space is available on this device.  The recommended minimum to install Arch Linux in Termux PRoot for armv7 is 1.25G of free user space.

 🕛 > 🕛 TermuxArch v1.6 will attempt to install Linux in /data/data/com.termux/files/home/arch.  Arch Linux in Termux PRoot will be available upon successful completion.  To run this BASH script again, use `!!`.  Ensure background data is not restricted.  Check the wireless connection if you do not see one o'clock 🕐 below.  Checking prerequisites…

 🕛 > 🕧 Prerequisites: OK  Downloading TermuxArch…

setupTermuxArch.sha 100%[===================>]     153  --.-KB/s    in 0s
setupTermuxArch.tar 100%[===================>]  19.38K  37.6KB/s    in 0.5s

 🕛 > 🕐 TermuxArch download: OK

 🕛 > 🕜 TermuxArch v1.6 integrity: OK

TermuxArch: FREE SPACE WARNING!  Start thinking about cleaning out some stuff.  983104 1K-blocks of free user space is available on this device.  The recommended minimum to install Arch Linux in Termux PRoot for armv7 is 1.25G of free user space.

 🕛 > 🕝 Detected armv7l GNU/Linux operating system.

 🕛 > 🕒 Activating termux-wake-lock: DONE

 🕛 > 🕞 Contacting worldwide mirror http://os.archlinuxarm.org/: DONE

 🕛 > 🕓 Downloading the checksum file and ArchLinuxARM-armv7-latest.tar.gz from the geographically local mirror http://fl.us.mirror.archlinuxarm.org/.  If contact with the local mirror is not successful, run bash setupTermuxArch.sh again.  Should the worldwide mirror not provide another geographically nearby server after a couple of attempts, use bash setupTermuxArch.sh manual after locating a local mirror from the Internet; See bash setupTermuxArch.sh help for additional options.  Download of ArchLinuxARM-armv7-latest.tar.gz pending Internet connection:


 🕛 > 🕠 Checking download integrity with Termux busybox md5sum.  This may take a little while:

 🕛 > 🕕 System image file download integrity: OK

 🕛 > 🕡 Uncompressing ArchLinuxARM-armv7-latest.tar.gz into /data/data/com.termux/files/home/arch.  The option to create Arch Linux system users is available through addauser and addauserps.  Arch Linux user login from Termux with startarch is now implemented.  See Ability for Scripts to Launch Commands for Arch Linux in Termux PRoot on Device https://github.com/sdrausty/TermuxArch/issues/54 for more information about these brand new options.  Additional features of TermuxArch are also listed at https://github.com/sdrausty/TermuxArch/releases.

While waiting, you can use df, du -hs, htop, ps, top and watch in a new Termux session to watch the uncompressing while the session completes.  Use info query and man query to learn more about your Linux system in the palm of your hand.  See The Linux Documentation Project http://tldp.org to learn more about Linux and CLI commands.  Uncompressing ArchLinuxARM-armv7-latest.tar.gz will take a long time; Be patient:

 🕛 > 🕘 Cleaning up installation files: DONE

 🕛 > 🕤 Arch Linux in Termux PRoot is installed.  Configuring and updating Arch Linux 📲

:: Removing redundant packages...
checking dependencies...

Packages (7) dhcpcd-7.0.4-1  mkinitcpio-24-2  netctl-1.17-1
             systemd-sysvcompat-239.0-2  linux-armv7-4.17.6-1
             linux-firmware-20180606.d114732-1  systemd-239.0-2

Total Removed Size:  388.62 MiB

:: Do you want to remove these packages? [Y/n]
:: Processing package changes...
(1/7) removing systemd-sysvcompat                  [######################] 100%
(2/7) removing netctl                              [######################] 100%
(3/7) removing dhcpcd                              [######################] 100%
(4/7) removing linux-armv7                         [######################] 100%
(5/7) removing mkinitcpio                          [######################] 100%
(6/7) removing systemd                             [######################] 100%
(7/7) removing linux-firmware                      [######################] 100%
==> Running ./root/bin/keys…
When gpg: Generating pacman keyring master key appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.

The program pacman-key will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When gpg: Generating pacman keyring master key appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling the device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  Use bash ~/arch/bin/we in a new Termux session to and watch entropy on device.

==> Running pacman-key --init…
==> Updating trust database...

==> Running pacman -S archlinux-keyring --noconfirm --color=always…
resolving dependencies...
looking for conflicting packages...

Packages (1) archlinux-keyring-20180627-1

Total Download Size:   0.58 MiB
Total Installed Size:  0.83 MiB

:: Proceed with installation? [Y/n]
:: Retrieving packages...
 archlinux-keyring-2...   597.4 KiB  6.98K/s 01:26 [######################] 100%
(1/1) checking keys in keyring                     [######################] 100%
downloading required keys...
:: Import PGP key 4096R/68B3537F39A313B3E574D06777193F152BDBE6A6, "Arch Linux ARM Build System <builder@archlinuxarm.org>", created: 2014-01-18? [Y/n]
(1/1) checking package integrity                   [######################] 100%
:: File /var/cache/pacman/pkg/archlinux-keyring-20180627-1-any.pkg.tar.xz is corrupted (invalid or corrupted package (PGP signature)).
Do you want to delete it? [Y/n]
Errors occurred, no packages were upgraded.

When Appending keys from archlinux.gpg appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.

The program pacman-key will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When Appending keys from archlinux.gpg appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling the device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  Use bash ~/arch/bin/we in a new Termux session to watch entropy on device.

==> Running pacman-key --populate…
==> Appending keys from archlinuxarm.gpg...
==> Locally signing trusted keys in keyring...
  -> Locally signing key 02922214DE8981D14DC2ACABBC704E86B823CD25...
  -> Locally signing key 69DD6C8FD314223E14362848BF7EEF7A9C6B5765...
  -> Locally signing key 9D22B7BB678DC056B1F7723CB55C5315DCD9EE1A...
==> Importing owner trust values...
==> Updating trust database...

==> Running pacman -Ss keyring --color=always…
core/archlinux-keyring 20180627-1
    Arch Linux PGP keyring
core/archlinuxarm-keyring 20140119-1 [installed]
    Arch Linux ARM PGP keyring
extra/gnome-keyring 1:3.28.2-1 (gnome)
    Stores passwords and encryption keys
extra/libgnome-keyring 3.12.0-3
    GNOME keyring client library
extra/python2-gnomekeyring 2.32.0-17
    Python bindings for libgnome-keyring
community/debian-archive-keyring 2017.7-1
    GnuPG archive keys of the Debian archive
community/gnome-keyring-sharp 1.0.2-6
    A fully managed implementation of libgnome-keyring
community/jetring 0.25-1
    gpg keyring maintenance using changesets
community/python-keyring 13.2.1-1
    Store and access your passwords safely.
community/python-keyrings-alt 1:3.1-1
    Alternate keyring implementations
community/ubuntu-keyring 2018.02.28-1
    GnuPG keys of the Ubuntu archive


TermuxArch Keys: DONE 🏁

:: Synchronizing package databases...
 core                     213.3 KiB  7.54K/s 00:28 [######################] 100%
^Cxtra                   1373.6 KiB  8.03K/s 01:54 [############----------]  59%

==> Generating locales...
  en_US.UTF-8... done
Generation complete.

int caught
 🕛 > 🕙 Releasing termux-wake-lock: DONE

 🕛 > 🕥 Use startarch to launch Arch Linux in Termux PRoot.  Alternatively, run ~/arch/startarch in a BASH shell to start Arch Linux in Termux PRoot for future sessions.  See startarch help for usage information.

 🕛 > 🕦 startarch copied to /data/data/com.termux/files/home/bin.

 🕛 = 🕛 Information about "Starting Arch Linux from Termux?" at https://github.com/sdrausty/TermuxArch/issues/25.  Use tour to run a very short tour to get to know the new Arch Linux in Termux PRoot environment you just set up a little bit better.  If there was more than one error during the update procedure and you would like to refresh the installation, use setupTermuxArch.sh refresh.  This will update and recreate the configuration provided.  The TermuxArch command keys helps install and generate Arch Linux keyring keys.

Arch Linux in Termux PRoot is installed in /data/data/com.termux/files/home/arch.  This project is in active development and contributions are welcome; See https://sdrausty.github.io/TermuxArch/CONTRIBUTORS for information.  The documentation repository for TermuxArch https://sdrausty.github.io/TermuxArch/docs/ is a Termux Arch submodule that is located at https://github.com/sdrausty/docsTermuxArch.  Pull requests and contributions through the issues pages are open to improve the ux and this Termux PRoot installation script.

Use ~/arch/startarch and startarch in a BASH shell to launch Arch Linux in Termux PRoot for future sessions.  If you are new to *nix, http://tldp.org has *nix documentation.  See https://wiki.archlinux.org/index.php/IRC_channel for available Arch Linux IRC channels.

Welcome to Arch Linux in Termux!
Install a package: pacman -S package
More  information: pacman -[D|F|Q|R|S|T|U]h
Search   packages: pacman -Ss query
Upgrade  packages: pacman -Syu

Chat: https://webchat.freenode.net/ #termux
Help: info query and man query
IRC:  wiki.archlinux.org/index.php/IRC_channel

[15:47 arch ]$ e

Arch Linux in Termux PRoot is installed in /data/data/com.termux/files/home/arch.  This project is in active development and contributions are welcome; See https://sdrausty.github.io/TermuxArch/CONTRIBUTORS for information.  The documentation repository for TermuxArch https://sdrausty.github.io/TermuxArch/docs/ is a Termux Arch submodule that is located at https://github.com/sdrausty/docsTermuxArch.  Pull requests and contributions through the issues pages are open to improve the ux and this Termux PRoot installation script.

Use ~/arch/startarch and startarch in a BASH shell to launch Arch Linux in Termux PRoot for future sessions.  If you are new to *nix, http://tldp.org has *nix documentation.  See https://wiki.archlinux.org/index.php/IRC_channel for available Arch Linux IRC channels.

Usage:  startarch Start Arch Linux as root.  This account should only be reserved for system administration.

        startarch command command Run Arch Linux command from Termux as root user.

        startarch login user Login as user.  Use addauser user first to create a user and the user's home directory.

        startarch raw Construct the startarch proot statement.  For example startarch raw su - user will login to Arch Linux as user.  Use addauser user first to create a user and the user's home directory.

        startarch su user command Login as user and execute command.  Use addauser user first to create a user and the user's home directory.


Thank you for using setupTermuxArch.sh v1.6 🏁

$ ./setupTermuxArch.sh p

Uninstall /data/data/com.termux/files/home/arch? [Y|n]
Uninstalling /data/data/com.termux/files/home/arch…
Uninstalling /data/data/com.termux/files/usr/bin/startarch: nothing to do for /data/data/com.termux/files/usr/bin/startarch.
Uninstalling /data/data/com.termux/files/home/arch: Done
$ mkdir arch
$ cp ArchLinuxARM-armv7-latest.tar.gz* arch/
$ ./setupTermuxArch.sh p

Uninstall /data/data/com.termux/files/home/arch? [Y|n] n
$ ./setupTermuxArch.sh

TermuxArch: DIRECTORY WARNING!  /data/data/com.termux/files/home/arch/ directory detected.  Termux Arch installation shall continue.  If in doubt, answer yes.

Uninstall /data/data/com.termux/files/home/arch? [Y|n] n

TermuxArch: FREE SPACE WARNING!  Start thinking about cleaning out some stuff.  983980 1K-blocks of free user space is available on this device.  The recommended minimum to install Arch Linux in Termux PRoot for armv7 is 1.25G of free user space.

 🕛 > 🕛 TermuxArch v1.6 will attempt to install Linux in /data/data/com.termux/files/home/arch.  Arch Linux in Termux PRoot will be available upon successful completion.  To run this BASH script again, use `!!`.  Ensure background data is not restricted.  Check the wireless connection if you do not see one o'clock 🕐 below.  Checking prerequisites…

 🕛 > 🕧 Prerequisites: OK  Downloading TermuxArch…

setupTermuxArch.sha 100%[===================>]     153  --.-KB/s    in 0s
setupTermuxArch.tar 100%[===================>]  19.39K  96.4KB/s    in 0.2s

 🕛 > 🕐 TermuxArch download: OK

 🕛 > 🕜 TermuxArch v1.6 integrity: OK

TermuxArch: FREE SPACE WARNING!  Start thinking about cleaning out some stuff.  983944 1K-blocks of free user space is available on this device.  The recommended minimum to install Arch Linux in Termux PRoot for armv7 is 1.25G of free user space.

 🕛 > 🕝 Detected armv7l GNU/Linux operating system.

 🕛 > 🕒 Activating termux-wake-lock: DONE

 🕛 > 🕞 Contacting worldwide mirror http://os.archlinuxarm.org/: DONE

 🕛 > 🕓 Downloading the checksum file and ArchLinuxARM-armv7-latest.tar.gz from the geographically local mirror http://il.us.mirror.archlinuxarm.org/.  If contact with the local mirror is not successful, run bash setupTermuxArch.sh again.  Should the worldwide mirror not provide another geographically nearby server after a couple of attempts, use bash setupTermuxArch.sh manual after locating a local mirror from the Internet; See bash setupTermuxArch.sh help for additional options.  Download of ArchLinuxARM-armv7-latest.tar.gz pending Internet connection:


 🕛 > 🕠 Checking download integrity with Termux busybox md5sum.  This may take a little while:

 🕛 > 🕕 System image file download integrity: OK

 🕛 > 🕡 Uncompressing ArchLinuxARM-armv7-latest.tar.gz into /data/data/com.termux/files/home/arch.  The option to create Arch Linux system users is available through addauser and addauserps.  Arch Linux user login from Termux with startarch is now implemented.  See Ability for Scripts to Launch Commands for Arch Linux in Termux PRoot on Device https://github.com/sdrausty/TermuxArch/issues/54 for more information about these brand new options.  Additional features of TermuxArch are also listed at https://github.com/sdrausty/TermuxArch/releases.

While waiting, you can use df, du -hs, htop, ps, top and watch in a new Termux session to watch the uncompressing while the session completes.  Use info query and man query to learn more about your Linux system in the palm of your hand.  See The Linux Documentation Project http://tldp.org to learn more about Linux and CLI commands.  Uncompressing ArchLinuxARM-armv7-latest.tar.gz will take a long time; Be patient:

 🕛 > 🕘 Cleaning up installation files: DONE

 🕛 > 🕤 Arch Linux in Termux PRoot is installed.  Configuring and updating Arch Linux 📲

:: Removing redundant packages...
checking dependencies...

Packages (7) dhcpcd-7.0.4-1  mkinitcpio-24-2  netctl-1.17-1
             systemd-sysvcompat-239.0-2  linux-armv7-4.17.6-1
             linux-firmware-20180606.d114732-1  systemd-239.0-2

Total Removed Size:  388.62 MiB

:: Do you want to remove these packages? [Y/n]
:: Processing package changes...
(1/7) removing systemd-sysvcompat                  [######################] 100%
(2/7) removing netctl                              [######################] 100%
(3/7) removing dhcpcd                              [######################] 100%
(4/7) removing linux-armv7                         [######################] 100%
(5/7) removing mkinitcpio                          [######################] 100%
(6/7) removing systemd                             [######################] 100%
(7/7) removing linux-firmware                      [######################] 100%

==> Running ./root/bin/keys…
When gpg: Generating pacman keyring master key appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.

The program pacman-key will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When gpg: Generating pacman keyring master key appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling the device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  Use bash ~/arch/bin/we in a new Termux session to and watch entropy on device.

==> Running pacman-key --init…
==> Updating trust database...

==> Running pacman -S archlinux-keyring --noconfirm --color=always…
resolving dependencies...
looking for conflicting packages...

Packages (1) archlinux-keyring-20180627-1

Total Download Size:   0.58 MiB
Total Installed Size:  0.83 MiB

:: Proceed with installation? [Y/n]
:: Retrieving packages...
 archlinux-keyring-2...   597.4 KiB  7.02K/s 01:25 [######################] 100%
(1/1) checking keys in keyring                     [######################] 100%
downloading required keys...
:: Import PGP key 4096R/68B3537F39A313B3E574D06777193F152BDBE6A6, "Arch Linux ARM Build System <builder@archlinuxarm.org>", created: 2014-01-18? [Y/n]
(1/1) checking package integrity                   [######################] 100%
:: File /var/cache/pacman/pkg/archlinux-keyring-20180627-1-any.pkg.tar.xz is corrupted (invalid or corrupted package (PGP signature)).
Do you want to delete it? [Y/n]
Errors occurred, no packages were upgraded.

When Appending keys from archlinux.gpg appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.

The program pacman-key will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When Appending keys from archlinux.gpg appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling the device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  Use bash ~/arch/bin/we in a new Termux session to watch entropy on device.

==> Running pacman-key --populate…
==> Appending keys from archlinuxarm.gpg...
==> Locally signing trusted keys in keyring...
  -> Locally signing key 02922214DE8981D14DC2ACABBC704E86B823CD25...
  -> Locally signing key 69DD6C8FD314223E14362848BF7EEF7A9C6B5765...
  -> Locally signing key 9D22B7BB678DC056B1F7723CB55C5315DCD9EE1A...
==> Importing owner trust values...
==> Updating trust database...

==> Running pacman -Ss keyring --color=always…
core/archlinux-keyring 20180627-1
    Arch Linux PGP keyring
core/archlinuxarm-keyring 20140119-1 [installed]
    Arch Linux ARM PGP keyring
extra/gnome-keyring 1:3.28.2-1 (gnome)
    Stores passwords and encryption keys
extra/libgnome-keyring 3.12.0-3
    GNOME keyring client library
extra/python2-gnomekeyring 2.32.0-17
    Python bindings for libgnome-keyring
community/debian-archive-keyring 2017.7-1
    GnuPG archive keys of the Debian archive
community/gnome-keyring-sharp 1.0.2-6
    A fully managed implementation of libgnome-keyring
community/jetring 0.25-1
    gpg keyring maintenance using changesets
community/python-keyring 13.2.1-1
    Store and access your passwords safely.
community/python-keyrings-alt 1:3.1-1
    Alternate keyring implementations
community/ubuntu-keyring 2018.02.28-1
    GnuPG keys of the Ubuntu archive


TermuxArch Keys: DONE 🏁

:: Synchronizing package databases...
 core                     213.3 KiB  11.4K/s 00:19 [######################] 100%
 extra                      2.2 MiB  10.1K/s 03:48 [######################] 100%
 community                  4.7 MiB  14.7K/s 05:26 [######################] 100%
 alarm                    111.2 KiB  7.90K/s 00:14 [######################] 100%
 aur                        6.1 KiB  75.8K/s 00:00 [######################] 100%
:: Starting full system upgrade...
resolving dependencies...
looking for conflicting packages...

Packages (11) device-mapper-2.02.180-1  gnupg-2.2.9-1  gnutls-3.5.19-1
              libgpg-error-1.32-1  libnftnl-1.1.1-1  libutil-linux-2.32.1-1
              lvm2-2.02.180-1  npth-1.6-1  pacman-mirrorlist-20180722-1
              pciutils-3.6.1-1  util-linux-2.32.1-1

Total Download Size:    7.88 MiB
Total Installed Size:  34.30 MiB
Net Upgrade Size:       0.02 MiB

:: Proceed with installation? [Y/n]
:: Retrieving packages...
 libgpg-error-1.32-1...   178.3 KiB  10.9K/s 00:16 [######################] 100%
 device-mapper-2.02....   255.1 KiB  10.0K/s 00:25 [######################] 100%
 npth-1.6-1-armv7h         12.2 KiB  16.0K/s 00:01 [######################] 100%
 gnutls-3.5.19-1-armv7h     2.2 MiB  10.3K/s 03:36 [######################] 100%
 libutil-linux-2.32....   304.4 KiB  6.94K/s 00:44 [######################] 100%
 libnftnl-1.1.1-1-armv7h   48.7 KiB  13.4K/s 00:04 [######################] 100%
 lvm2-2.02.180-1-armv7h  1200.7 KiB  10.2K/s 01:58 [######################] 100%
 pacman-mirrorlist-2...     2.6 KiB  52.9K/s 00:00 [######################] 100%
 pciutils-3.6.1-1-armv7h   76.0 KiB  9.69K/s 00:08 [######################] 100%
 util-linux-2.32.1-1...  1896.0 KiB  10.0K/s 03:09 [######################] 100%Errors occurred, no packages were upgraded.
                                                                                ==> Generating locales...
  en_US.UTF-8... done
Generation complete.                                                            
 🕛 > 🕙 Releasing termux-wake-lock: DONE                                       
 🕛 > 🕥 Use startarch to launch Arch Linux in Termux PRoot.  Alternatively, run ~/arch/startarch in a BASH shell to start Arch Linux in Termux PRoot for future sessions.  See startarch help for usage information.

 🕛 > 🕦 startarch copied to /data/data/com.termux/files/home/bin.

 🕛 = 🕛 Information about "Starting Arch Linux from Termux?" at https://github.com/sdrausty/TermuxArch/issues/25.  Use tour to run a very short tour to get to know the new Arch Linux in Termux PRoot environment you just set up a little bit better.  If there was more than one error during the update procedure and you would like to refresh the installation, use setupTermuxArch.sh refresh.  This will update and recreate the configuration provided.  The TermuxArch command keys helps install and generate Arch Linux keyring keys.

Arch Linux in Termux PRoot is installed in /data/data/com.termux/files/home/arch.  This project is in active development and contributions are welcome; See https://sdrausty.github.io/TermuxArch/CONTRIBUTORS for information.  The documentation repository for TermuxArch https://sdrausty.github.io/TermuxArch/docs/ is a Termux Arch submodule that is located at https://github.com/sdrausty/docsTermuxArch.  Pull requests and contributions through the issues pages are open to improve the ux and this Termux PRoot installation script.

Use ~/arch/startarch and startarch in a BASH shell to launch Arch Linux in Termux PRoot for future sessions.  If you are new to *nix, http://tldp.org has *nix documentation.  See https://wiki.archlinux.org/index.php/IRC_channel for available Arch Linux IRC channels.

Welcome to Arch Linux in Termux!
Install a package: pacman -S package
More  information: pacman -[D|F|Q|R|S|T|U]h
Search   packages: pacman -Ss query
Upgrade  packages: pacman -Syu

Chat: https://webchat.freenode.net/ #termux
Help: info query and man query
IRC:  wiki.archlinux.org/index.php/IRC_channel

[16:33 arch ]$ pc
:: Synchronizing package databases...
 core is up to date
 extra is up to date
 community is up to date
 alarm is up to date
 aur is up to date                                                              :: Starting full system upgrade...
resolving dependencies...
looking for conflicting packages...                                             
Packages (11) device-mapper-2.02.180-1  gnupg-2.2.9-1  gnutls-3.5.19-1
              libgpg-error-1.32-1  libnftnl-1.1.1-1  libutil-linux-2.32.1-1
              lvm2-2.02.180-1  npth-1.6-1  pacman-mirrorlist-20180722-1
              pciutils-3.6.1-1  util-linux-2.32.1-1

Total Download Size:    1.22 MiB                                                Total Installed Size:  34.30 MiB
Net Upgrade Size:       0.02 MiB

:: Proceed with installation? [Y/n]
:: Retrieving packages...
 gnupg-2.2.9-1-armv7h    1247.8 KiB  10.6K/s 01:58 [######################] 100%
(11/11) checking keys in keyring                   [######################] 100%(11/11) checking package integrity                 [######################] 100%
(11/11) loading package files                      [######################] 100%
(11/11) checking for file conflicts                [######################] 100%
(11/11) checking available disk space              [######################] 100%
warning: could not get file information for usr/lib/gnupg/scdaemon
:: Processing package changes...
( 1/11) upgrading libgpg-error                     [######################] 100%
( 2/11) upgrading device-mapper                    [######################] 100%
( 3/11) upgrading npth                             [######################] 100%
( 4/11) upgrading gnutls                           [######################] 100%
( 5/11) upgrading libutil-linux                    [######################] 100%
( 6/11) upgrading gnupg                            [######################] 100%( 7/11) upgrading libnftnl                         [######################] 100%
( 8/11) upgrading lvm2                             [######################] 100%( 9/11) upgrading pacman-mirrorlist                [######################] 100%warning: /etc/pacman.d/mirrorlist installed as /etc/pacman.d/mirrorlist.pacnew  (10/11) upgrading pciutils                         [######################] 100%(11/11) upgrading util-linux                       [######################] 100%:: Running post-transaction hooks...
(1/1) Updating the info directory file...
[1/5] rm -rf /boot/
[2/5] rm -rf /usr/lib/firmware                                                  [3/5] rm -rf /usr/lib/modules                                                   [4/5] pacman -Sc --noconfirm --color=always
Packages to keep:
  All locally installed packages                                                                                                                                Cache directory: /var/cache/pacman/pkg/                                         :: Do you want to remove all other packages from cache? [Y/n]
removing old packages from cache...

Database directory: /var/lib/pacman/
:: Do you want to remove unused repositories? [Y/n]
removing unused sync repositories...
[5/5] rm /var/cache/pacman/pkg/device-mapper-2.02.180-1-armv7h.pkg.tar.xz /var/cache/pacman/pkg/gnupg-2.2.9-1-armv7h.pkg.tar.xz /var/cache/pacman/pkg/gnutls-3.5.19-1-armv7h.pkg.tar.xz /var/cache/pacman/pkg/libgpg-error-1.32-1-armv7h.pkg.tar.xz /var/cache/pacman/pkg/libnftnl-1.1.1-1-armv7h.pkg.tar.xz /var/cache/pacman/pkg/libutil-linux-2.32.1-1-armv7h.pkg.tar.xz /var/cache/pacman/pkg/lvm2-2.02.180-1-armv7h.pkg.tar.xz /var/cache/pacman/pkg/npth-1.6-1-armv7h.pkg.tar.xz /var/cache/pacman/pkg/pacman-mirrorlist-20180722-1-any.pkg.tar.xz /var/cache/pacman/pkg/pciutils-3.6.1-1-armv7h.pkg.tar.xz /var/cache/pacman/pkg/util-linux-2.32.1-1-armv7h.pkg.tar.xz
trim:done
[18:08 arch ]$ e                                                                
Arch Linux in Termux PRoot is installed in /data/data/com.termux/files/home/arch.  This project is in active development and contributions are welcome; See https://sdrausty.github.io/TermuxArch/CONTRIBUTORS for information.  The documentation repository for TermuxArch https://sdrausty.github.io/TermuxArch/docs/ is a Termux Arch submodule that is located at https://github.com/sdrausty/docsTermuxArch.  Pull requests and contributions through the issues pages are open to improve the ux and this Termux PRoot installation script.

Use ~/arch/startarch and startarch in a BASH shell to launch Arch Linux in Termux PRoot for future sessions.  If you are new to *nix, http://tldp.org has *nix documentation.  See https://wiki.archlinux.org/index.php/IRC_channel for available Arch Linux IRC channels.

Usage:  startarch Start Arch Linux as root.  This account should only be reserved for system administration.

        startarch command command Run Arch Linux command from Termux as root user.

        startarch login user Login as user.  Use addauser user first to create a user and the user's home directory.
                                                                                        startarch raw Construct the startarch proot statement.  For example startarch raw su - user will login to Arch Linux as user.  Use addauser user first to create a user and the user's home directory.

        startarch su user command Login as user and execute command.  Use addauser user first to create a user and the user's home directory.


Thank you for using setupTermuxArch.sh v1.6 🏁

$ ./setupTermuxArch.sh p

Uninstall /data/data/com.termux/files/home/arch? [Y|n]
Uninstalling /data/data/com.termux/files/home/arch…
Uninstalling /data/data/com.termux/files/usr/bin/startarch: nothing to do for /data/data/com.termux/files/usr/bin/startarch.
Uninstalling /data/data/com.termux/files/home/arch: Done
$ ./setupTermuxArch.sh

 🕛 > 🕛 TermuxArch v1.6 will attempt to install Linux in /data/data/com.termux/files/home/arch.  Arch Linux in Termux PRoot will be available upon successful completion.  To run this BASH script again, use `!!`.  Ensure background data is not restricted.  Check the wireless connection if you do not see one o'clock 🕐 below.  Checking prerequisites…

 🕛 > 🕧 Prerequisites: OK  Downloading TermuxArch…

^Cint caught
$ p
/data/data/com.termux/files/home
$ ./setupTermuxArch.sh p

Uninstall /data/data/com.termux/files/home/arch? [Y|n]
Uninstalling /data/data/com.termux/files/home/arch…
Uninstalling /data/data/com.termux/files/usr/bin/startarch: nothing to do for /data/data/com.termux/files/usr/bin/startarch.
Uninstalling /data/data/com.termux/files/home/bin/startarch: nothing to do for /data/data/com.termux/files/home/bin/startarch.
Uninstalling /data/data/com.termux/files/home/arch: nothing to do for /data/data/com.termux/files/home/arch.
Uninstalling /data/data/com.termux/files/home/arch: Done
$ cp git/sdrausty/TermuxArch/setupTermuxArch.sh .
$ ./setupTermuxArch.sh p

Uninstall /data/data/com.termux/files/home/arch? [Y|n]
Uninstalling /data/data/com.termux/files/home/arch…
Uninstalling /data/data/com.termux/files/usr/bin/startarch: nothing to do for /data/data/com.termux/files/usr/bin/startarch.
Uninstalling /data/data/com.termux/files/home/bin/startarch: nothing to do for /data/data/com.termux/files/home/bin/startarch.
Uninstalling /data/data/com.termux/files/home/arch: nothing to do for /data/data/com.termux/files/home/arch.
Uninstalling /data/data/com.termux/files/home/arch: Done

$ !mk
mkdir arch
$ !cp
cp git/sdrausty/TermuxArch/setupTermuxArch.sh .
$ cp ArchLinuxARM-armv7-latest.tar.gz* arch/
$ ./setupTermuxArch.sh

TermuxArch: DIRECTORY WARNING!  /data/data/com.termux/files/home/arch/ directory detected.  Termux Arch installation shall continue.  If in doubt, answer yes.

Uninstall /data/data/com.termux/files/home/arch? [Y|n] n


TermuxArch: FREE SPACE WARNING!  Start thinking about cleaning out some stuff.  983552 1K-blocks of free user space is available on this device.  The recommended minimum to install Arch Linux in Termux PRoot for armv7 is 1.25G of free user space.

 🕛 > 🕛 TermuxArch v1.6 will attempt to install Linux in /data/data/com.termux/files/home/arch.  Arch Linux in Termux PRoot will be available upon successful completion.  To run this BASH script again, use `!!`.  Ensure background data is not restricted.  Check the wireless connection if you do not see one o'clock 🕐 below.  Checking prerequisites…

 🕛 > 🕧 Prerequisites: OK  Downloading TermuxArch…

setupTermuxArch.sha 100%[===================>]     153  --.-KB/s    in 0s
setupTermuxArch.tar 100%[===================>]  19.39K  --.-KB/s    in 0.1s

 🕛 > 🕐 TermuxArch download: OK

 🕛 > 🕜 TermuxArch v1.6 integrity: OK

TermuxArch: FREE SPACE WARNING!  Start thinking about cleaning out some stuff.  983516 1K-blocks of free user space is available on this device.  The recommended minimum to install Arch Linux in Termux PRoot for armv7 is 1.25G of free user space.

 🕛 > 🕝 Detected armv7l GNU/Linux operating system.

 🕛 > 🕒 Activating termux-wake-lock: DONE

 🕛 > 🕞 Contacting worldwide mirror http://os.archlinuxarm.org/: DONE

 🕛 > 🕓 Downloading the checksum file and ArchLinuxARM-armv7-latest.tar.gz from the geographically local mirror http://il.us.mirror.archlinuxarm.org/.  If contact with the local mirror is not successful, run bash setupTermuxArch.sh again.  Should the worldwide mirror not provide another geographically nearby server after a couple of attempts, use bash setupTermuxArch.sh manual after locating a local mirror from the Internet; See bash setupTermuxArch.sh help for additional options.  Download of ArchLinuxARM-armv7-latest.tar.gz pending Internet connection:


 🕛 > 🕠 Checking download integrity with Termux busybox md5sum.  This may take a little while:

 🕛 > 🕕 System image file download integrity: OK

 🕛 > 🕡 Uncompressing ArchLinuxARM-armv7-latest.tar.gz into /data/data/com.termux/files/home/arch.  The option to create Arch Linux system users is available through addauser and addauserps.  Arch Linux user login from Termux with startarch is now implemented.  See Ability for Scripts to Launch Commands for Arch Linux in Termux PRoot on Device https://github.com/sdrausty/TermuxArch/issues/54 for more information about these brand new options.  Additional features of TermuxArch are also listed at https://github.com/sdrausty/TermuxArch/releases.

While waiting, you can use df, du -hs, htop, ps, top and watch in a new Termux session to watch the uncompressing while the session completes.  Use info query and man query to learn more about your Linux system in the palm of your hand.  See The Linux Documentation Project http://tldp.org to learn more about Linux and CLI commands.  Uncompressing ArchLinuxARM-armv7-latest.tar.gz will take a long time; Be patient:
^Z
[1]+  Stopped                 ./setupTermuxArch.sh
$ p
/data/data/com.termux/files/home
$ fg
./setupTermuxArch.sh

 🕛 > 🕘 Cleaning up installation files: DONE

 🕛 > 🕤 Arch Linux in Termux PRoot is installed.  Configuring and updating Arch Linux 📲

:: Removing redundant packages...
checking dependencies...

Packages (7) dhcpcd-7.0.4-1  mkinitcpio-24-2  netctl-1.17-1
             systemd-sysvcompat-239.0-2  linux-armv7-4.17.6-1
             linux-firmware-20180606.d114732-1  systemd-239.0-2

Total Removed Size:  388.62 MiB

:: Do you want to remove these packages? [Y/n]
:: Processing package changes...
(1/7) removing systemd-sysvcompat                  [######################] 100%
(2/7) removing netctl                              [######################] 100%
(3/7) removing dhcpcd                              [######################] 100%
(4/7) removing linux-armv7                         [######################] 100%
(5/7) removing mkinitcpio                          [######################] 100%
(6/7) removing systemd                             [######################] 100%
(7/7) removing linux-firmware                      [######################] 100%

==> Running ./root/bin/keys…
When gpg: Generating pacman keyring master key appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.

The program pacman-key will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When gpg: Generating pacman keyring master key appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling the device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  Use bash ~/arch/bin/we in a new Termux session to and watch entropy on device.
                                                                                ==> Running pacman-key --init…
==> Updating trust database...                                                  
==> Running pacman -S archlinux-keyring --noconfirm --color=always…
resolving dependencies...
looking for conflicting packages...

Packages (1) archlinux-keyring-20180627-1                                       
Total Download Size:   0.58 MiB                                                 Total Installed Size:  0.83 MiB

:: Proceed with installation? [Y/n]
:: Retrieving packages...
 archlinux-keyring-2...   597.4 KiB  10.5K/s 00:57 [######################] 100%
(1/1) checking keys in keyring                     [######################] 100%
downloading required keys...
Errors occurred, no packages were upgraded.

When Appending keys from archlinux.gpg appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.

The program pacman-key will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When Appending keys from archlinux.gpg appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling the device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  Use bash ~/arch/bin/we in a new Termux session to watch entropy on device.                                                            
==> Running pacman-key --populate…
==> Appending keys from archlinuxarm.gpg...
==> Locally signing trusted keys in keyring...
  -> Locally signing key 02922214DE8981D14DC2ACABBC704E86B823CD25...
  -> Locally signing key 69DD6C8FD314223E14362848BF7EEF7A9C6B5765...              -> Locally signing key 9D22B7BB678DC056B1F7723CB55C5315DCD9EE1A...
==> Importing owner trust values...
==> Updating trust database...
                                                                                ==> Running pacman -Ss keyring --color=always…
core/archlinux-keyring 20180627-1
    Arch Linux PGP keyring                                                      core/archlinuxarm-keyring 20140119-1 [installed]                                    Arch Linux ARM PGP keyring                                                  extra/gnome-keyring 1:3.28.2-1 (gnome)                                              Stores passwords and encryption keys
extra/libgnome-keyring 3.12.0-3
    GNOME keyring client library
extra/python2-gnomekeyring 2.32.0-17
    Python bindings for libgnome-keyring
community/debian-archive-keyring 2017.7-1
    GnuPG archive keys of the Debian archive
community/gnome-keyring-sharp 1.0.2-6
    A fully managed implementation of libgnome-keyring
community/jetring 0.25-1
    gpg keyring maintenance using changesets
community/python-keyring 13.2.1-1
    Store and access your passwords safely.                                     community/python-keyrings-alt 1:3.1-1
    Alternate keyring implementations
community/ubuntu-keyring 2018.02.28-1
    GnuPG keys of the Ubuntu archive                                            

TermuxArch Keys: DONE 🏁                                                                                                                                        :: Synchronizing package databases...                                            core                     213.3 KiB  7.49K/s 00:28 [######################] 100% extra                      2.2 MiB  9.89K/s 03:52 [######################] 100%
 community                  4.7 MiB  14.5K/s 05:30 [######################] 100%
 alarm                    111.2 KiB  7.81K/s 00:14 [######################] 100%
 aur                        6.1 KiB  60.6K/s 00:00 [######################] 100%
:: Starting full system upgrade...
resolving dependencies...
looking for conflicting packages...

Packages (11) device-mapper-2.02.180-1  gnupg-2.2.9-1  gnutls-3.5.19-1
              libgpg-error-1.32-1  libnftnl-1.1.1-1  libutil-linux-2.32.1-1
              lvm2-2.02.180-1  npth-1.6-1  pacman-mirrorlist-20180722-1                       pciutils-3.6.1-1  util-linux-2.32.1-1

Total Download Size:    7.88 MiB
Total Installed Size:  34.30 MiB
Net Upgrade Size:       0.02 MiB

:: Proceed with installation? [Y/n]
:: Retrieving packages...
 libgpg-error-1.32-1...   178.3 KiB  11.1K/s 00:16 [######################] 100% device-mapper-2.02....   255.1 KiB  10.6K/s 00:24 [######################] 100% npth-1.6-1-armv7h         12.2 KiB  10.8K/s 00:01 [######################] 100% gnutls-3.5.19-1-armv7h     2.2 MiB  10.3K/s 03:35 [######################] 100% libutil-linux-2.32....   304.4 KiB  7.11K/s 00:43 [######################] 100% pacman-mirrorlist-2...     2.6 KiB  13.9K/s 00:00 [######################] 100%Errors occurred, no packages were upgraded.s 00:03 [#####-----------------]  24%
==> Generating locales...
  en_US.UTF-8... done
Generation complete.                                                            
 🕛 > 🕙 Releasing termux-wake-lock: DONE

 🕛 > 🕥 Use startarch to launch Arch Linux in Termux PRoot.  Alternatively, run ~/arch/startarch in a BASH shell to start Arch Linux in Termux PRoot for future sessions.  See startarch help for usage information.                                                                                                            🕛 > 🕦 startarch copied to /data/data/com.termux/files/home/bin.                                                                                               🕛 = 🕛 Information about "Starting Arch Linux from Termux?" at https://github.com/sdrausty/TermuxArch/issues/25.  Use tour to run a very short tour to get to know the new Arch Linux in Termux PRoot environment you just set up a little bit better.  If there was more than one error during the update procedure and you would like to refresh the installation, use setupTermuxArch.sh refresh.  This will update and recreate the configuration provided.  The TermuxArch command keys helps install and generate Arch Linux keyring keys.                                                                                                              Arch Linux in Termux PRoot is installed in /data/data/com.termux/files/home/arch.  This project is in active development and contributions are welcome; See https://sdrausty.github.io/TermuxArch/CONTRIBUTORS for information.  The documentation repository for TermuxArch https://sdrausty.github.io/TermuxArch/docs/ is a Termux Arch submodule that is located at https://github.com/sdrausty/docsTermuxArch.  Pull requests and contributions through the issues pages are open to improve the ux and this Termux PRoot installation script.

Use ~/arch/startarch and startarch in a BASH shell to launch Arch Linux in Termux PRoot for future sessions.  If you are new to *nix, http://tldp.org has *nix documentation.  See https://wiki.archlinux.org/index.php/IRC_channel for available Arch Linux IRC channels.

Welcome to Arch Linux in Termux!
Install a package: pacman -S package
More  information: pacman -[D|F|Q|R|S|T|U]h
Search   packages: pacman -Ss query
Upgrade  packages: pacman -Syu

Chat: https://webchat.freenode.net/ #termux
Help: info query and man query
IRC:  wiki.archlinux.org/index.php/IRC_channel

[19:00 arch ]$ pc
:: Synchronizing package databases...
 core is up to date
 extra is up to date
error: failed retrieving file 'community.db' from il.us.mirror.archlinuxarm.org : Operation too slow. Less than 1 bytes/sec transferred the last 10 seconds     error: failed to update community (download library error)
 alarm is up to date                                                             aur is up to date
error: failed to synchronize all databases
[19:56 arch ]$ pc
:: Synchronizing package databases...
 core is up to date
 extra is up to date
 community                  4.7 MiB  14.2K/s 05:38 [######################] 100%
 alarm is up to date
 aur is up to date
:: Starting full system upgrade...
resolving dependencies...
looking for conflicting packages...
                                                                                Packages (11) device-mapper-2.02.180-1  gnupg-2.2.9-1  gnutls-3.5.19-1
              libgpg-error-1.32-1  libnftnl-1.1.1-1  libutil-linux-2.32.1-1
              lvm2-2.02.180-1  npth-1.6-1  pacman-mirrorlist-20180722-1
              pciutils-3.6.1-1  util-linux-2.32.1-1                             
Total Download Size:    3.31 MiB
Total Installed Size:  34.30 MiB                                                Net Upgrade Size:       0.02 MiB                                                                                                                                :: Proceed with installation? [Y/n]                                             :: Retrieving packages...
 gnupg-2.2.9-1-armv7h     193.5 KiB  7.09K/s 00:27 [######################] 100%
 libnftnl-1.1.1-1-armv7h   48.7 KiB  10.7K/s 00:05 [######################] 100%
 lvm2-2.02.180-1-armv7h  1200.7 KiB  10.2K/s 01:58 [######################] 100%
 pciutils-3.6.1-1-armv7h   52.3 KiB  6.70K/s 00:08 [######################] 100%
error: failed retrieving file 'util-linux-2.32.1-1-armv7h.pkg.tar.xz' from il.us.mirror.archlinuxarm.org : Recv failure: Connection reset by peer
warning: failed to retrieve some files
error: failed to commit transaction (download library error)
Errors occurred, no packages were upgraded.
[20:18 arch ]$ pc
:: Synchronizing package databases...
 core is up to date                                                              extra is up to date
 community                  4.7 MiB  14.6K/s 05:28 [######################] 100%
 alarm is up to date
 aur is up to date
:: Starting full system upgrade...                                              resolving dependencies...                                                       looking for conflicting packages...                                             
Packages (11) device-mapper-2.02.180-1  gnupg-2.2.9-1  gnutls-3.5.19-1
              libgpg-error-1.32-1  libnftnl-1.1.1-1  libutil-linux-2.32.1-1                   lvm2-2.02.180-1  npth-1.6-1  pacman-mirrorlist-20180722-1                       pciutils-3.6.1-1  util-linux-2.32.1-1                                                                                                             Total Download Size:    1.43 MiB
Total Installed Size:  34.30 MiB
Net Upgrade Size:       0.02 MiB

:: Proceed with installation? [Y/n]
:: Retrieving packages...
 util-linux-2.32.1-1...  1466.3 KiB  5.80K/s 04:13 [######################] 100%
(11/11) checking keys in keyring                   [######################] 100%
(11/11) checking package integrity                 [######################] 100%
(11/11) loading package files                      [######################] 100%
(11/11) checking for file conflicts                [######################] 100%
(11/11) checking available disk space              [######################] 100%warning: could not get file information for usr/lib/gnupg/scdaemon              :: Processing package changes...                                                ( 1/11) upgrading libgpg-error                     [######################] 100%
( 2/11) upgrading device-mapper                    [######################] 100%
( 3/11) upgrading npth                             [######################] 100%
( 4/11) upgrading gnutls                           [######################] 100%
( 5/11) upgrading libutil-linux                    [######################] 100%
( 6/11) upgrading gnupg                            [######################] 100%
( 7/11) upgrading libnftnl                         [######################] 100%
( 8/11) upgrading lvm2                             [######################] 100%
( 9/11) upgrading pacman-mirrorlist                [######################] 100%warning: /etc/pacman.d/mirrorlist installed as /etc/pacman.d/mirrorlist.pacnew  (10/11) upgrading pciutils                         [######################] 100%(11/11) upgrading util-linux                       [######################] 100%:: Running post-transaction hooks...                                            (1/1) Updating the info directory file...                                       [1/5] rm -rf /boot/                                                             [2/5] rm -rf /usr/lib/firmware
[3/5] rm -rf /usr/lib/modules
[4/5] pacman -Sc --noconfirm --color=always
Packages to keep:                                                                 All locally installed packages

Cache directory: /var/cache/pacman/pkg/
:: Do you want to remove all other packages from cache? [Y/n]
removing old packages from cache...                                                                                                                             Database directory: /var/lib/pacman/                                            :: Do you want to remove unused repositories? [Y/n]                             removing unused sync repositories...                                            [5/5] rm /var/cache/pacman/pkg/device-mapper-2.02.180-1-armv7h.pkg.tar.xz /var/cache/pacman/pkg/gnupg-2.2.9-1-armv7h.pkg.tar.xz /var/cache/pacman/pkg/gnutls-3.5.19-1-armv7h.pkg.tar.xz /var/cache/pacman/pkg/libgpg-error-1.32-1-armv7h.pkg.tar.xz /var/cache/pacman/pkg/libnftnl-1.1.1-1-armv7h.pkg.tar.xz /var/cache/pacman/pkg/libutil-linux-2.32.1-1-armv7h.pkg.tar.xz /var/cache/pacman/pkg/lvm2-2.02.180-1-armv7h.pkg.tar.xz /var/cache/pacman/pkg/npth-1.6-1-armv7h.pkg.tar.xz /var/cache/pacman/pkg/pacman-mirrorlist-20180722-1-any.pkg.tar.xz /var/cache/pacman/pkg/pciutils-3.6.1-1-armv7h.pkg.tar.xz /var/cache/pacman/pkg/util-linux-2.32.1-1-armv7h.pkg.tar.xz
trim:done
[20:29 arch ]$