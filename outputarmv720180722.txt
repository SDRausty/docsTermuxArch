$ ./setupTermuxArch.sh 

TermuxArch: DIRECTORY WARNING!  /data/data/com.termux/files/home/arch/ directory detected.  Termux Arch installation shall continue.  If in doubt, answer yes.

Uninstall /data/data/com.termux/files/home/arch? [Y|n] n
./setupTermuxArch.sh: line 612: [[: 85%: syntax error: operand expected (error token is "%")

 🕛 > 🕛 TermuxArch v1.6 will attempt to install Linux in /data/data/com.termux/files/home/arch.  Arch Linux in Termux PRoot will be available upon successful completion.  To run this BASH script again, use `!!`.  Ensure background data is not restricted.  Check the wireless connection if you do not see one o'clock 🕐 below.  Checking prerequisites…

 🕛 > 🕧 Prerequisites: OK  Downloading TermuxArch…

setupTermuxArch.sha 100%[===================>]     153  --.-KB/s    in 0s
setupTermuxArch.tar 100%[===================>]  19.36K  42.4KB/s    in 0.5s

 🕛 > 🕐 TermuxArch download: OK

 🕛 > 🕜 TermuxArch v1.6 integrity: OK
./setupTermuxArch.sh: line 612: [[: 85%: syntax error: operand expected (error token is "%")

 🕛 > 🕝 Detected armv7l GNU/Linux operating system.

 🕛 > 🕒 Activating termux-wake-lock: DONE

 🕛 > 🕞 Contacting worldwide mirror http://os.archlinuxarm.org/: DONE

 🕛 > 🕓 Downloading the checksum file and ArchLinuxARM-armv7-latest.tar.gz from the geographically local mirror http://fl.us.mirror.archlinuxarm.org/.  If contact with the local mirror is not successful, run bash setupTermuxArch.sh again.  Should the worldwide mirror not provide another geographically nearby server after a couple of attempts, use bash setupTermuxArch.sh manual after locating a local mirror from the Internet; See bash setupTermuxArch.sh help for additional options.  Download of ArchLinuxARM-armv7-latest.tar.gz pending Internet connection:

ArchLinuxARM-armv7-  26%[++++>               ]  97.38M  14.8KB/s    in 8m 37s
7-latest.tar.gz      26%[+++++               ]  97.56M  14.4KB/s    eta 4h 52m ^C
$ cd TermuxArchBloom/
$ v necessaryfunctions.sh
$ v systemmaintenance.sh
$ ./setupTermuxArch.sh c

TermuxArch: DIRECTORY WARNING!  /data/data/com.termux/files/home/arch/ directory detected.  Termux Arch installation shall continue.  If in doubt, answer yes.

Uninstall /data/data/com.termux/files/home/arch? [Y|n] n
./setupTermuxArch.sh: line 612: [[: 68%: syntax error: operand expected (error token is "%")

 🕛 > 🕛 TermuxArch v1.6 will attempt to install Linux in /data/data/com.termux/files/home/arch.  Arch Linux in Termux PRoot will be available upon successful completion.  To run this BASH script again, use `!!`.  Ensure background data is not restricted.  Check the wireless connection if you do not see one o'clock 🕐 below.  Checking prerequisites…

 🕛 > 🕧 Prerequisites: OK  Downloading TermuxArch…

./setupTermuxArch.sh: line 612: [[: 68%: syntax error: operand expected (error token is "%")

 🕛 > 🕝 Detected armv7l GNU/Linux operating system.

 🕛 > 🕒 Activating termux-wake-lock: DONE

 🕛 > 🕞 Contacting worldwide mirror http://os.archlinuxarm.org/: DONE

 🕛 > 🕓 Downloading the checksum file and ArchLinuxARM-armv7-latest.tar.gz from the geographically local mirror http://il.us.mirror.archlinuxarm.org/.  If contact with the local mirror is not successful, run bash setupTermuxArch.sh again.  Should the worldwide mirror not provide another geographically nearby server after a couple of attempts, use bash setupTermuxArch.sh manual after locating a local mirror from the Internet; See bash setupTermuxArch.sh help for additional options.  Download of ArchLinuxARM-armv7-latest.tar.gz pending Internet connection:

ArchLinuxARM-armv7-  28%[+++++               ] 104.97M  14.7KB/s    in 8m 38s
ArchLinuxARM-armv7-  30%[+++++>              ] 112.38M  15.3KB/s    in 8m 35s
ArchLinuxARM-armv7-  32%[++++++              ] 119.78M  14.8KB/s    in 8m 39s
ArchLinuxARM-armv7-  34%[++++++              ] 127.23M  14.8KB/s    in 8m 36s
ArchLinuxARM-armv7-  36%[++++++>             ] 134.63M  15.2KB/s    in 8m 34s
ArchLinuxARM-armv7-  38%[+++++++             ] 142.05M  14.7KB/s    in 8m 34s
ArchLinuxARM-armv7-  40%[+++++++>            ] 149.45M  15.1KB/s    in 8m 32s
ArchLinuxARM-armv7-  42%[++++++++            ] 156.86M  14.6KB/s    in 8m 34s
ArchLinuxARM-armv7-  44%[++++++++            ] 164.27M  15.2KB/s    in 8m 34s
ArchLinuxARM-armv7-  46%[++++++++>           ] 171.67M  15.1KB/s    in 8m 34s
ArchLinuxARM-armv7-  48%[+++++++++           ] 179.08M  15.5KB/s    in 8m 35s
ArchLinuxARM-armv7-  50%[+++++++++>          ] 186.62M  14.6KB/s    in 8m 42s
ArchLinuxARM-armv7-  52%[++++++++++          ] 194.02M  14.7KB/s    in 8m 33s
ArchLinuxARM-armv7-  54%[++++++++++          ] 201.43M  15.3KB/s    in 8m 33s
ArchLinuxARM-armv7-  56%[++++++++++>         ] 208.83M  15.1KB/s    in 8m 35s
ArchLinuxARM-armv7-  58%[+++++++++++         ] 216.23M  14.6KB/s    in 8m 32s
ArchLinuxARM-armv7-  60%[+++++++++++>        ] 223.64M  14.9KB/s    in 8m 34s
ArchLinuxARM-armv7-  63%[++++++++++++        ] 231.06M  15.0KB/s    in 8m 34s
ArchLinuxARM-armv7-  65%[++++++++++++>       ] 238.47M  14.9KB/s    in 8m 33s
ArchLinuxARM-armv7-  67%[+++++++++++++       ] 245.88M  14.5KB/s    in 8m 36s
 🕛 > 🕞 Contacting worldwide mirror http://os.archlinuxarm.org/: DONE

 🕛 > 🕓 Downloading the checksum file and ArchLinuxARM-armv7-latest.tar.gz from the geographically local mirror http://fl.us.mirror.archlinuxarm.org/.  If contact with the local mirror is not successful, run bash setupTermuxArch.sh again.  Should the worldwide mirror not provide another geographically nearby server after a couple of attempts, use bash setupTermuxArch.sh manual after locating a local mirror from the Internet; See bash setupTermuxArch.sh help for additional options.  Download of ArchLinuxARM-armv7-latest.tar.gz pending Internet connection:

ArchLinuxARM-armv7-  69%[+++++++++++++       ] 253.29M  14.7KB/s    in 8m 34s
ArchLinuxARM-armv7-  71%[+++++++++++++>      ] 260.70M  15.1KB/s    in 8m 36s
ArchLinuxARM-armv7-  73%[++++++++++++++      ] 268.10M  15.0KB/s    in 8m 36s
ArchLinuxARM-armv7-  75%[++++++++++++++>     ] 275.51M  14.7KB/s    in 8m 32s
ArchLinuxARM-armv7-  77%[+++++++++++++++     ] 282.92M  14.9KB/s    in 8m 31s
ArchLinuxARM-armv7-  79%[+++++++++++++++     ] 290.33M  14.9KB/s    in 8m 33s
ArchLinuxARM-armv7-  81%[+++++++++++++++>    ] 297.74M  15.3KB/s    in 8m 34s
ArchLinuxARM-armv7-  83%[++++++++++++++++    ] 305.15M  15.1KB/s    in 8m 33s
ArchLinuxARM-armv7-  85%[++++++++++++++++>   ] 312.56M  15.0KB/s    in 8m 32s
ArchLinuxARM-armv7-  87%[+++++++++++++++++   ] 319.97M  14.8KB/s    in 8m 33s
ArchLinuxARM-armv7-  89%[+++++++++++++++++   ] 327.40M  15.3KB/s    in 8m 36s
ArchLinuxARM-armv7-  91%[+++++++++++++++++>  ] 334.81M  14.8KB/s    in 8m 35s
ArchLinuxARM-armv7-  93%[++++++++++++++++++  ] 342.22M  15.1KB/s    in 8m 35s
ArchLinuxARM-armv7-  95%[++++++++++++++++++> ] 349.63M  14.6KB/s    in 8m 33s
ArchLinuxARM-armv7-  97%[+++++++++++++++++++ ] 357.03M  15.4KB/s    in 8m 33s
ArchLinuxARM-armv7-  99%[+++++++++++++++++++ ] 364.43M  15.2KB/s    in 8m 33s
ArchLinuxARM-armv7-  99%[+++++++++++++++++++ ] 365.80M  --.-KB/s    in 20m 41s
ArchLinuxARM-armv7-  99%[+++++++++++++++++++ ] 366.53M  --.-KB/s    in 17m 8s
ArchLinuxARM-armv7- 100%[+++++++++++++++++++>] 366.76M  16.2KB/s    in 32s

 🕛 > 🕞 Contacting worldwide mirror http://os.archlinuxarm.org/: DONE

 🕛 > 🕓 Downloading the checksum file and ArchLinuxARM-armv7-latest.tar.gz from the geographically local mirror http://il.us.mirror.archlinuxarm.org/.  If contact with the local mirror is not successful, run bash setupTermuxArch.sh again.  Should the worldwide mirror not provide another geographically nearby server after a couple of attempts, use bash setupTermuxArch.sh manual after locating a local mirror from the Internet; See bash setupTermuxArch.sh help for additional options.  Download of ArchLinuxARM-armv7-latest.tar.gz pending Internet connection:


 🕛 > 🕠 Checking download integrity with Termux busybox md5sum.  This may take a little while:

 🕛 > 🕕 System image file download integrity: OK

 🕛 > 🕡 Uncompressing ArchLinuxARM-armv7-latest.tar.gz into /data/data/com.termux/files/home/arch.  The option to create Arch Linux system users is available through addauser and addauserps.  Arch Linux user login from Termux with startarch is now implemented.  See Ability for Scripts to Launch Commands for Arch Linux in Termux PRoot on Device https://github.com/sdrausty/TermuxArch/issues/54 for more information about these brand new options.  Additional features of TermuxArch are also listed at https://github.com/sdrausty/TermuxArch/releases.

While waiting, you can use df, du -hs, htop, ps, top and watch in a new Termux session to watch the uncompressing while the session completes.  Use info query and man query to learn more about your Linux system in the palm of your hand.  See The Linux Documentation Project http://tldp.org to learn more about Linux and CLI commands.  Uncompressing ArchLinuxARM-armv7-latest.tar.gz will take a long time; Be patient:

 🕛 > 🕘 Cleaning up installation files: DONE

 🕛 > 🕤 Arch Linux in Termux PRoot is installed.  Configuring and updating Arch Linux 📲

:: Removing redundant packages...
checking dependencies...

Packages (7) dhcpcd-7.0.4-1  mkinitcpio-24-2  netctl-1.17-1
             systemd-sysvcompat-239.0-2  linux-armv7-4.17.6-1
             linux-firmware-20180606.d114732-1  systemd-239.0-2

Total Removed Size:  388.62 MiB

:: Do you want to remove these packages? [Y/n]
:: Processing package changes...
(1/7) removing systemd-sysvcompat                  [######################] 100%
(2/7) removing netctl                              [######################] 100%
(3/7) removing dhcpcd                              [######################] 100%
(4/7) removing linux-armv7                         [######################] 100%
(5/7) removing mkinitcpio                          [######################] 100%
(6/7) removing systemd                             [######################] 100%
(7/7) removing linux-firmware                      [######################] 100%
:: Synchronizing package databases...
 core                     214.0 KiB  8.02K/s 00:27 [######################] 100%
 extra                      2.2 MiB  10.2K/s 03:46 [######################] 100%
 community                  4.7 MiB  14.7K/s 05:26 [######################] 100%
 alarm                    111.2 KiB  7.56K/s 00:15 [######################] 100%
 aur                        6.1 KiB  75.8K/s 00:00 [######################] 100%
:: Starting full system upgrade...
resolving dependencies...
looking for conflicting packages...

Packages (8) device-mapper-2.02.180-1  gnupg-2.2.9-1  gnutls-3.5.19-1
             libgpg-error-1.32-1  libnftnl-1.1.1-1  lvm2-2.02.180-1  npth-1.6-1
             pciutils-3.6.1-1

Total Download Size:    5.72 MiB
Total Installed Size:  22.71 MiB
Net Upgrade Size:       0.05 MiB

:: Proceed with installation? [Y/n]
:: Retrieving packages...
 libgpg-error-1.32-1...   178.3 KiB  11.3K/s 00:16 [######################] 100%gnupg-2.2.9-1  gnutls-3.5.19-1
             libgpg-error-1.32-1  libnftnl-1.1.1-1  lvm2-2.02.180-1  npth-1.6-1
             pciutils-3.6.1-1

Total Download Size:    5.72 MiB
Total Installed Size:  22.71 MiB
Net Upgrade Size:       0.05 MiB

:: Proceed with installation? [Y/n]
:: Retrieving packages...
 libgpg-error-1.32-1...   178.3 KiB  11.3K/s 00:16 [######################] 100%
 device-mapper-2.02....   255.1 KiB  10.2K/s 00:25 [######################] 100%
 npth-1.6-1-armv7h         12.2 KiB  10.6K/s 00:01 [######################] 100%
 gnutls-3.5.19-1-armv7h     2.2 MiB  10.3K/s 03:36 [######################] 100%
 gnupg-2.2.9-1-armv7h    1877.7 KiB  6.56K/s 04:46 [######################] 100%
 libnftnl-1.1.1-1-armv7h   48.7 KiB  9.30K/s 00:05 [######################] 100%
 lvm2-2.02.180-1-armv7h  1200.7 KiB  10.1K/s 01:59 [######################] 100%
 pciutils-3.6.1-1-armv7h   76.0 KiB  7.95K/s 00:10 [######################] 100%
(8/8) checking keys in keyring                     [######################] 100%
downloading required keys...
Errors occurred, no packages were upgraded.

==> Generating locales...
  en_US.UTF-8... done
Generation complete.

 🕛 > 🕙 Releasing termux-wake-lock: DONE

 🕛 > 🕥 Use startarch to launch Arch Linux in Termux PRoot.  Alternatively, run ~/arch/startarch in a BASH shell to start Arch Linux in Termux PRoot for future sessions.  See startarch help for usage information.

 🕛 > 🕦 startarch copied to /data/data/com.termux/files/home/bin.

 🕛 = 🕛 Information about "Starting Arch Linux from Termux?" at https://github.com/sdrausty/TermuxArch/issues/25.  Use tour to run a very short tour to get to know the new Arch Linux in Termux PRoot environment you just set up a little bit better.  If there was more than one error during the update procedure and you would like to refresh the installation, use setupTermuxArch.sh refresh.  This will update and recreate the configuration provided.  The TermuxArch command keys helps install and generate Arch Linux keyring keys.

Arch Linux in Termux PRoot is installed in /data/data/com.termux/files/home/arch.  This project is in active development and contributions are welcome; See https://sdrausty.github.io/TermuxArch/CONTRIBUTORS for information.  The documentation repository for TermuxArch https://sdrausty.github.io/TermuxArch/docs/ is a Termux Arch submodule that is located at https://github.com/sdrausty/docsTermuxArch.  Pull requests and contributions through the issues pages are open to improve the ux and this Termux PRoot installation script.

Use ~/arch/startarch and startarch in a BASH shell to launch Arch Linux in Termux PRoot for future sessions.  If you are new to *nix, http://tldp.org has *nix documentation.  See https://wiki.archlinux.org/index.php/IRC_channel for available Arch Linux IRC channels.

Welcome to Arch Linux in Termux!
Install a package: pacman -S package
More  information: pacman -[D|F|Q|R|S|T|U]h
Search   packages: pacman -Ss query
Upgrade  packages: pacman -Syu

Chat: https://webchat.freenode.net/ #termux
Help: info query and man query
IRC:  wiki.archlinux.org/index.php/IRC_channel

[08:18 arch ]$ keys

When gpg: Generating pacman keyring master key appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.

The program pacman-key will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When gpg: Generating pacman keyring master key appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling the device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  Use bash ~/arch/bin/we in a new Termux session to and watch entropy on device.

==> Running pacman-key --init...
==> Updating trust database...

==> Running pacman -Syu archlinux-keyring --noconfirm --color=always...
:: Synchronizing package databases...
 core is up to date
 extra is up to date
 community is up to date
 alarm is up to date
 aur is up to date
:: Starting full system upgrade...
resolving dependencies...
looking for conflicting packages...

Packages (9) device-mapper-2.02.180-1  gnupg-2.2.9-1  gnutls-3.5.19-1
             libgpg-error-1.32-1  libnftnl-1.1.1-1  lvm2-2.02.180-1  npth-1.6-1
             pciutils-3.6.1-1  archlinux-keyring-20180627-1

Total Download Size:    0.58 MiB
Total Installed Size:  23.54 MiB
Net Upgrade Size:       0.88 MiB

:: Proceed with installation? [Y/n]
:: Retrieving packages...
 archlinux-keyring-2...   597.4 KiB  7.13K/s 01:24 [######################] 100%
(9/9) checking keys in keyring                     [######################] 100%
downloading required keys...
:: Import PGP key 4096R/68B3537F39A313B3E574D06777193F152BDBE6A6, "Arch Linux ARM Build System <builder@archlinuxarm.org>", created: 2014-01-18? [Y/n]

Errors occurred, no packages were upgraded.

When Appending keys from archlinux.gpg appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.

The program pacman-key will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When Appending keys from archlinux.gpg appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling the device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  Use bash ~/arch/bin/we in a new Termux session to watch entropy on device.

==> Running pacman-key --populate...
==> Appending keys from archlinuxarm.gpg...
==> Locally signing trusted keys in keyring...
  -> Locally signing key 02922214DE8981D14DC2ACABBC704E86B823CD25...
  -> Locally signing key 69DD6C8FD314223E14362848BF7EEF7A9C6B5765...
  -> Locally signing key 9D22B7BB678DC056B1F7723CB55C5315DCD9EE1A...
==> Importing owner trust values...
==> Updating trust database...

==> Running pacman -Ss keyring --color=always...
core/archlinux-keyring 20180627-1
    Arch Linux PGP keyring
core/archlinuxarm-keyring 20140119-1 [installed]
    Arch Linux ARM PGP keyring
extra/gnome-keyring 1:3.28.2-1 (gnome)
    Stores passwords and encryption keys
extra/libgnome-keyring 3.12.0-3
    GNOME keyring client library
extra/python2-gnomekeyring 2.32.0-17
    Python bindings for libgnome-keyring
community/debian-archive-keyring 2017.7-1
    GnuPG archive keys of the Debian archive
community/gnome-keyring-sharp 1.0.2-6
    A fully managed implementation of libgnome-keyring
community/jetring 0.25-1
    gpg keyring maintenance using changesets
community/python-keyring 13.2.1-1
    Store and access your passwords safely.
community/python-keyrings-alt 1:3.1-1
    Alternate keyring implementations
community/ubuntu-keyring 2018.02.28-1
    GnuPG keys of the Ubuntu archive


TermuxArch Keys: DONE 🏁

[08:43 arch ]$ keys

When gpg: Generating pacman keyring master key appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.

The program pacman-key will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When gpg: Generating pacman keyring master key appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling the device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  Use bash ~/arch/bin/we in a new Termux session to and watch entropy on device.

==> Running pacman-key --init...

==> Running pacman -Syu archlinux-keyring --noconfirm --color=always...
:: Synchronizing package databases...
 core is up to date
 extra is up to date
 community is up to date
 alarm is up to date
 aur is up to date
:: Starting full system upgrade...
resolving dependencies...
looking for conflicting packages...

Packages (9) device-mapper-2.02.180-1  gnupg-2.2.9-1  gnutls-3.5.19-1
             libgpg-error-1.32-1  libnftnl-1.1.1-1  lvm2-2.02.180-1  npth-1.6-1
             pciutils-3.6.1-1  archlinux-keyring-20180627-1

Total Installed Size:  23.54 MiB
Net Upgrade Size:       0.88 MiB

:: Proceed with installation? [Y/n]
(9/9) checking keys in keyring                     [######################] 100%
(9/9) checking package integrity                   [######################] 100%
(9/9) loading package files                        [######################] 100%Packages (9) device-mapper-2.02.180-1  gnupg-2.2.9-1  gnutls-3.5.19-1
             libgpg-error-1.32-1  libnftnl-1.1.1-1  lvm2-2.02.180-1  npth-1.6-1
             pciutils-3.6.1-1  archlinux-keyring-20180627-1

Total Installed Size:  23.54 MiB
Net Upgrade Size:       0.88 MiB

:: Proceed with installation? [Y/n]
(9/9) checking keys in keyring                     [######################] 100%
(9/9) checking package integrity                   [######################] 100%
(9/9) loading package files                        [######################] 100%
(9/9) checking for file conflicts                  [######################] 100%
(9/9) checking available disk space                [######################] 100%
:: Processing package changes...
(1/9) installing archlinux-keyring                 [######################] 100%
==> Appending keys from archlinux.gpg...
==> Locally signing trusted keys in keyring...
  -> Locally signing key DDB867B92AA789C165EEFA799B729B06A680C281...
  -> Locally signing key 684148BB25B49E986A4944C55184252D824B18E8...
  -> Locally signing key 91FFE0700E80619CEB73235CA88E23E377514E00...
  -> Locally signing key AB19265E5D7D20687D303246BA1DFB64FFF979E7...
  -> Locally signing key 0E8B644079F599DFC1DDC3973348882F6AC6A4C2...
==> Importing owner trust values...
gpg: setting ownertrust to 4
gpg: setting ownertrust to 4
gpg: setting ownertrust to 4
gpg: inserting ownertrust of 4
gpg: setting ownertrust to 4
==> Disabling revoked keys in keyring...
  -> Disabling key 7FA647CD89891DEDC060287BB9113D1ED21E1A55...
  -> Disabling key D4DE5ABDE2A7287644EAC7E36D1A9E70E19DAA50...
  -> Disabling key 40440DC037C05620984379A6761FAD69BA06C6A9...
  -> Disabling key B1F2C889CB2CCB2ADA36D963097D629E437520BD...
  -> Disabling key BC1FBE4D2826A0B51E47ED62E2539214C6C11350...
  -> Disabling key 63F395DE2D6398BBE458F281F2DBB4931985A992...
  -> Disabling key 8F76BEEA0289F9E1D3E229C05F946DED983D4366...
  -> Disabling key 4FCF887689C41B09506BE8D5F3E1D5C5D30DB0AD...
  -> Disabling key 81D7F8241DB38BC759C80FCE3A726C6170E80477...
  -> Disabling key 5E7585ADFF106BFFBBA319DC654B877A0864983E...
  -> Disabling key 50F33E2E5B0C3D900424ABE89BDCF497A4BBCC7F...
  -> Disabling key E7210A59715F6940CF9A4E36A001876699AD6E84...
  -> Disabling key F5A361A3A13554B85E57DDDAAF7EF7873CFD4BB6...
  -> Disabling key 40776A5221EF5AD468A4906D42A1DB15EC133BAD...
  -> Disabling key 8CF934E339CAD8ABF342E822E711306E3C4F88BC...
  -> Disabling key 5696C003B0854206450C8E5BE613C09CB4440678...
  -> Disabling key 9515D8A8EAB88E49BB65EDBCE6B456CAF15447D5...
  -> Disabling key 4A8B17E20B88ACA61860009B5CED81B7C2E5C0D2...
  -> Disabling key 0B20CA1931F5DA3A70D0F8D2EA6836E1AB441196...
  -> Disabling key 34C5D94FE7E7913E86DC427E7FB1A3800C84C0A5...
  -> Disabling key 39F880E50E49A4D11341E8F939E4F17F295AFBF4...
  -> Disabling key 66BD74A036D522F51DD70A3C7F2A16726521E06D...
  -> Disabling key DBE7D3DD8C81D58D0A13D0E76BC26A17B9B7018A...
  -> Disabling key 07DFD3A0BC213FA12EDC217559B3122E2FA915EC...
  -> Disabling key 44D4A033AC140143927397D47EFD567D4C7EA887...
  -> Disabling key 27FFC4769E19F096D41D9265A04F9397CDFD6BB0...
  -> Disabling key 8840BD07FC24CB7CE394A07CCF7037A4F27FB7DA...
==> Updating trust database...
gpg: marginals needed: 3  completes needed: 1  trust model: pgp
gpg: depth: 0  valid:   1  signed:   8  trust: 0-, 0q, 0n, 0m, 0f, 1u
gpg: depth: 1  valid:   8  signed:  71  trust: 0-, 0q, 0n, 8m, 0f, 0u
gpg: depth: 2  valid:  71  signed:   8  trust: 71-, 0q, 0n, 0m, 0f, 0u
gpg: next trustdb check due at 2018-12-13
(2/9) upgrading libgpg-error                       [######################] 100%
(3/9) upgrading device-mapper                      [######################] 100%
(4/9) upgrading npth                               [######################] 100%
(5/9) upgrading gnutls                             [######################] 100%
(6/9) upgrading gnupg                              [######################] 100%
(7/9) upgrading libnftnl                           [######################] 100%
(8/9) upgrading lvm2                               [######################] 100%
(9/9) upgrading pciutils                           [######################] 100%
:: Running post-transaction hooks...
(1/1) Updating the info directory file...

When Appending keys from archlinux.gpg appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.

The program pacman-key will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When Appending keys from archlinux.gpg appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling the device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  Use bash ~/arch/bin/we in a new Termux session to watch entropy on device.

==> Running pacman-key --populate...
==> Appending keys from archlinuxarm.gpg...
==> Appending keys from archlinux.gpg...
==> Locally signing trusted keys in keyring...
  -> Locally signing key DDB867B92AA789C165EEFA799B729B06A680C281...
  -> Locally signing key 02922214DE8981D14DC2ACABBC704E86B823CD25...
  -> Locally signing key 684148BB25B49E986A4944C55184252D824B18E8...
  -> Locally signing key 91FFE0700E80619CEB73235CA88E23E377514E00...
  -> Locally signing key 69DD6C8FD314223E14362848BF7EEF7A9C6B5765...
  -> Locally signing key AB19265E5D7D20687D303246BA1DFB64FFF979E7...
  -> Locally signing key 0E8B644079F599DFC1DDC3973348882F6AC6A4C2...
  -> Locally signing key 9D22B7BB678DC056B1F7723CB55C5315DCD9EE1A...
==> Importing owner trust values...
=> Disabling revoked keys in keyring...
  -> Disabling key 7FA647CD89891DEDC060287BB9113D1ED21E1A55...
  -> Disabling key D4DE5ABDE2A7287644EAC7E36D1A9E70E19DAA50...
  -> Disabling key 40440DC037C05620984379A6761FAD69BA06C6A9...
  -> Disabling key B1F2C889CB2CCB2ADA36D963097D629E437520BD...
  -> Disabling key BC1FBE4D2826A0B51E47ED62E2539214C6C11350...
  -> Disabling key 63F395DE2D6398BBE458F281F2DBB4931985A992...
  -> Disabling key 8F76BEEA0289F9E1D3E229C05F946DED983D4366...
  -> Disabling key 4FCF887689C41B09506BE8D5F3E1D5C5D30DB0AD...
  -> Disabling key 81D7F8241DB38BC759C80FCE3A726C6170E80477...
  -> Disabling key 5E7585ADFF106BFFBBA319DC654B877A0864983E...
  -> Disabling key 50F33E2E5B0C3D900424ABE89BDCF497A4BBCC7F...
  -> Disabling key E7210A59715F6940CF9A4E36A001876699AD6E84...
  -> Disabling key F5A361A3A13554B85E57DDDAAF7EF7873CFD4BB6...
  -> Disabling key 40776A5221EF5AD468A4906D42A1DB15EC133BAD...
  -> Disabling key 8CF934E339CAD8ABF342E822E711306E3C4F88BC...
  -> Disabling key 5696C003B0854206450C8E5BE613C09CB4440678...
  -> Disabling key 9515D8A8EAB88E49BB65EDBCE6B456CAF15447D5...
  -> Disabling key 4A8B17E20B88ACA61860009B5CED81B7C2E5C0D2...
  -> Disabling key 0B20CA1931F5DA3A70D0F8D2EA6836E1AB441196...
  -> Disabling key 34C5D94FE7E7913E86DC427E7FB1A3800C84C0A5...
  -> Disabling key 39F880E50E49A4D11341E8F939E4F17F295AFBF4...
  -> Disabling key 66BD74A036D522F51DD70A3C7F2A16726521E06D...
  -> Disabling key DBE7D3DD8C81D58D0A13D0E76BC26A17B9B7018A...
  -> Disabling key 07DFD3A0BC213FA12EDC217559B3122E2FA915EC...
  -> Disabling key 44D4A033AC140143927397D47EFD567D4C7EA887...
  -> Disabling key 27FFC4769E19F096D41D9265A04F9397CDFD6BB0...
  -> Disabling key 8840BD07FC24CB7CE394A07CCF7037A4F27FB7DA...
==> Updating trust database...

==> Running pacman -Ss keyring --color=always...
core/archlinux-keyring 20180627-1 [installed]
    Arch Linux PGP keyring
core/archlinuxarm-keyring 20140119-1 [installed]
    Arch Linux ARM PGP keyring
extra/gnome-keyring 1:3.28.2-1 (gnome)
    Stores passwords and encryption keys
extra/libgnome-keyring 3.12.0-3
    GNOME keyring client library
extra/python2-gnomekeyring 2.32.0-17
    Python bindings for libgnome-keyring
community/debian-archive-keyring 2017.7-1
    GnuPG archive keys of the Debian archive
community/gnome-keyring-sharp 1.0.2-6
    A fully managed implementation of libgnome-keyring
community/jetring 0.25-1
    gpg keyring maintenance using changesets
community/python-keyring 13.2.1-1
    Store and access your passwords safely.
community/python-keyrings-alt 1:3.1-1
    Alternate keyring implementations
community/ubuntu-keyring 2018.02.28-1
    GnuPG keys of the Ubuntu archive


TermuxArch Keys: DONE 🏁

[08:47 arch ]$ e

Arch Linux in Termux PRoot is installed in /data/data/com.termux/files/home/arch.  This project is in active development and contributions are welcome; See https://sdrausty.github.io/TermuxArch/CONTRIBUTORS for information.  The documentation repository for TermuxArch https://sdrausty.github.io/TermuxArch/docs/ is a Termux Arch submodule that is located at https://github.com/sdrausty/docsTermuxArch.  Pull requests and contributions through the issues pages are open to improve the ux and this Termux PRoot installation script.

Use ~/arch/startarch and startarch in a BASH shell to launch Arch Linux in Termux PRoot for future sessions.  If you are new to *nix, http://tldp.org has *nix documentation.  See https://wiki.archlinux.org/index.php/IRC_channel for available Arch Linux IRC channels.

Usage:  startarch Start Arch Linux as root.  This account should only be reserved for system administration.

        startarch command command Run Arch Linux command from Termux as root user.

        startarch login user Login as user.  Use addauser user first to create a user and the user's home directory.

        startarch raw Construct the startarch proot statement.  For example startarch raw su - user will login to Arch Linux as user.  Use addauser user first to create a user and the user's home directory.

        startarch su user command Login as user and execute command.  Use addauser user first to create a user and the user's home directory.


Thank you for using setupTermuxArch.sh v1.6 🏁

$
