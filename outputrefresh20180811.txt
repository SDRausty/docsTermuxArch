$ ./setupTermuxArch.sh re ar

 🕛 > 🕛 setupTermuxArch gen.v1.6 id264737524095 will refresh your TermuxArch files in /data/data/com.termux/files/home/ar.  Ensure background data is not restricted.  Run bash setupTermuxArch.sh help for additional information.  Check the wireless connection if you do not see one o'clock 🕐 below.  Checking prerequisites…

 🕛 > 🕧 Prerequisites: OK  Downloading TermuxArch…

setupTermuxArch.sha5 100%[=====================>]     153  --.-KB/s    in 0s
setupTermuxArch.tar. 100%[=====================>]  22.50K  --.-KB/s    in 0.09s

 🕛 > 🕐 TermuxArch download: OK

setupTermuxArch.sh: UPDATED
TermuxArch: RESTARTED

 🕛 > 🕛 setupTermuxArch gen.v1.6 id267843448814 will refresh your TermuxArch files in /data/data/com.termux/files/home/ar.  Ensure background data is not restricted.  Run bash setupTermuxArch.sh help for additional information.  Check the wireless connection if you do not see one o'clock 🕐 below.  Checking prerequisites…

 🕛 > 🕧 Prerequisites: OK  Downloading TermuxArch…

setupTermuxArch.sha5 100%[=====================>]     153  --.-KB/s    in 0s
setupTermuxArch.tar. 100%[=====================>]  22.50K  --.-KB/s    in 0.09s

 🕛 > 🕐 TermuxArch download: OK

 🕛 > 🕜 TermuxArch gen.v1.6 id267843448814 integrity: OK

 🕛 > 🕒 Activating termux-wake-lock: DONE


==> Running setupTermuxArch.sh re ar 📲

:: Removing redundant packages for Termux PRoot installation…

==> Running TermuxArch keys archlinux-keyring archlinuxarm-keyring gen.v1.6 id267843448814…

When gpg: Generating pacman keyring master key appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.

The program pacman-key will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When gpg: Generating pacman keyring master key appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling the device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  Use bash ~/ar/bin/we in a new Termux session to and watch entropy on device.

==> Running pacman-key --init…

==> Running pacman -S archlinux-keyring archlinuxarm-keyring --noconfirm --color=always…
error: duplicated database entry 'haveged'
warning: archlinux-keyring-20180627-1 is up to date -- reinstalling
warning: archlinuxarm-keyring-20140119-1 is up to date -- reinstalling
resolving dependencies...
looking for conflicting packages...

Packages (2) archlinux-keyring-20180627-1  archlinuxarm-keyring-20140119-1

Total Installed Size:  0.87 MiB
Net Upgrade Size:      0.00 MiB

:: Proceed with installation? [Y/n]
(2/2) checking keys in keyring                     [#########################] 100%
(2/2) checking package integrity                   [#########################] 100%
(2/2) loading package files                        [#########################] 100%
(2/2) checking for file conflicts                  [#########################] 100%
(2/2) checking available disk space                [#########################] 100%
:: Processing package changes...
(1/2) reinstalling archlinux-keyring               [#########################] 100%
==> Appending keys from archlinux.gpg...
==> Locally signing trusted keys in keyring...
  -> Locally signing key DDB867B92AA789C165EEFA799B729B06A680C281...
  -> Locally signing key 684148BB25B49E986A4944C55184252D824B18E8...
  -> Locally signing key 91FFE0700E80619CEB73235CA88E23E377514E00...
  -> Locally signing key AB19265E5D7D20687D303246BA1DFB64FFF979E7...
  -> Locally signing key 0E8B644079F599DFC1DDC3973348882F6AC6A4C2...
==> Importing owner trust values...
==> Disabling revoked keys in keyring...
  -> Disabling key 7FA647CD89891DEDC060287BB9113D1ED21E1A55...
  -> Disabling key D4DE5ABDE2A7287644EAC7E36D1A9E70E19DAA50...
  -> Disabling key 40440DC037C05620984379A6761FAD69BA06C6A9...
  -> Disabling key B1F2C889CB2CCB2ADA36D963097D629E437520BD...
  -> Disabling key BC1FBE4D2826A0B51E47ED62E2539214C6C11350...
  -> Disabling key 63F395DE2D6398BBE458F281F2DBB4931985A992...
  -> Disabling key 8F76BEEA0289F9E1D3E229C05F946DED983D4366...
  -> Disabling key 4FCF887689C41B09506BE8D5F3E1D5C5D30DB0AD...
  -> Disabling key 81D7F8241DB38BC759C80FCE3A726C6170E80477...
  -> Disabling key 5E7585ADFF106BFFBBA319DC654B877A0864983E...
  -> Disabling key 50F33E2E5B0C3D900424ABE89BDCF497A4BBCC7F...
  -> Disabling key E7210A59715F6940CF9A4E36A001876699AD6E84...
  -> Disabling key F5A361A3A13554B85E57DDDAAF7EF7873CFD4BB6...
  -> Disabling key 40776A5221EF5AD468A4906D42A1DB15EC133BAD...
  -> Disabling key 8CF934E339CAD8ABF342E822E711306E3C4F88BC...
  -> Disabling key 5696C003B0854206450C8E5BE613C09CB4440678...
  -> Disabling key 9515D8A8EAB88E49BB65EDBCE6B456CAF15447D5...
  -> Disabling key 4A8B17E20B88ACA61860009B5CED81B7C2E5C0D2...
  -> Disabling key 0B20CA1931F5DA3A70D0F8D2EA6836E1AB441196...
  -> Disabling key 34C5D94FE7E7913E86DC427E7FB1A3800C84C0A5...
  -> Disabling key 39F880E50E49A4D11341E8F939E4F17F295AFBF4...
  -> Disabling key 66BD74A036D522F51DD70A3C7F2A16726521E06D...
  -> Disabling key DBE7D3DD8C81D58D0A13D0E76BC26A17B9B7018A...
  -> Disabling key 07DFD3A0BC213FA12EDC217559B3122E2FA915EC...
  -> Disabling key 44D4A033AC140143927397D47EFD567D4C7EA887...
  -> Disabling key 27FFC4769E19F096D41D9265A04F9397CDFD6BB0...
  -> Disabling key 8840BD07FC24CB7CE394A07CCF7037A4F27FB7DA...
==> Updating trust database...
gpg: next trustdb check due at 2018-12-13
(2/2) reinstalling archlinuxarm-keyring            [#########################] 100%
==> Appending keys from archlinuxarm.gpg...
==> Locally signing trusted keys in keyring...
  -> Locally signing key 02922214DE8981D14DC2ACABBC704E86B823CD25...
  -> Locally signing key 69DD6C8FD314223E14362848BF7EEF7A9C6B5765...
  -> Locally signing key 9D22B7BB678DC056B1F7723CB55C5315DCD9EE1A...
==> Importing owner trust values...
==> Updating trust database...
gpg: next trustdb check due at 2018-12-13
:: Running post-transaction hooks...
(1/1) Arming ConditionNeedsUpdate...

When Appending keys from archlinux.gpg appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.

The program pacman-key will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When Appending keys from archlinux.gpg appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling the device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  Use bash ~/ar/bin/we in a new Termux session to watch entropy on device.

==> Running pacman-key --populate…
==> Appending keys from archlinux.gpg...
==> Appending keys from archlinuxarm.gpg...
==> Locally signing trusted keys in keyring...
  -> Locally signing key DDB867B92AA789C165EEFA799B729B06A680C281...
  -> Locally signing key 02922214DE8981D14DC2ACABBC704E86B823CD25...
  -> Locally signing key 684148BB25B49E986A4944C55184252D824B18E8...
  -> Locally signing key 91FFE0700E80619CEB73235CA88E23E377514E00...
  -> Locally signing key 69DD6C8FD314223E14362848BF7EEF7A9C6B5765...
  -> Locally signing key AB19265E5D7D20687D303246BA1DFB64FFF979E7...
  -> Locally signing key 0E8B644079F599DFC1DDC3973348882F6AC6A4C2...
  -> Locally signing key 9D22B7BB678DC056B1F7723CB55C5315DCD9EE1A...
==> Importing owner trust values...
==> Disabling revoked keys in keyring...
  -> Disabling key 7FA647CD89891DEDC060287BB9113D1ED21E1A55...
  -> Disabling key D4DE5ABDE2A7287644EAC7E36D1A9E70E19DAA50...
  -> Disabling key 40440DC037C05620984379A6761FAD69BA06C6A9...
  -> Disabling key B1F2C889CB2CCB2ADA36D963097D629E437520BD...
  -> Disabling key BC1FBE4D2826A0B51E47ED62E2539214C6C11350...
  -> Disabling key 63F395DE2D6398BBE458F281F2DBB4931985A992...
  -> Disabling key 8F76BEEA0289F9E1D3E229C05F946DED983D4366...
  -> Disabling key 4FCF887689C41B09506BE8D5F3E1D5C5D30DB0AD...
  -> Disabling key 81D7F8241DB38BC759C80FCE3A726C6170E80477...
  -> Disabling key 5E7585ADFF106BFFBBA319DC654B877A0864983E...
  -> Disabling key 50F33E2E5B0C3D900424ABE89BDCF497A4BBCC7F...
  -> Disabling key E7210A59715F6940CF9A4E36A001876699AD6E84...
  -> Disabling key F5A361A3A13554B85E57DDDAAF7EF7873CFD4BB6...
  -> Disabling key 40776A5221EF5AD468A4906D42A1DB15EC133BAD...
  -> Disabling key 8CF934E339CAD8ABF342E822E711306E3C4F88BC...
  -> Disabling key 5696C003B0854206450C8E5BE613C09CB4440678...
  -> Disabling key 9515D8A8EAB88E49BB65EDBCE6B456CAF15447D5...
  -> Disabling key 4A8B17E20B88ACA61860009B5CED81B7C2E5C0D2...
  -> Disabling key 0B20CA1931F5DA3A70D0F8D2EA6836E1AB441196...
  -> Disabling key 34C5D94FE7E7913E86DC427E7FB1A3800C84C0A5...
  -> Disabling key 39F880E50E49A4D11341E8F939E4F17F295AFBF4...
  -> Disabling key 66BD74A036D522F51DD70A3C7F2A16726521E06D...
  -> Disabling key DBE7D3DD8C81D58D0A13D0E76BC26A17B9B7018A...
  -> Disabling key 07DFD3A0BC213FA12EDC217559B3122E2FA915EC...
  -> Disabling key 44D4A033AC140143927397D47EFD567D4C7EA887...
  -> Disabling key 27FFC4769E19F096D41D9265A04F9397CDFD6BB0...
  -> Disabling key 8840BD07FC24CB7CE394A07CCF7037A4F27FB7DA...
==> Updating trust database...
gpg: next trustdb check due at 2018-12-13

==> Running pacman -Ss keyring --color=always…
error: duplicated database entry 'haveged'
core/archlinux-keyring 20180627-1 [installed]
    Arch Linux PGP keyring
core/archlinuxarm-keyring 20140119-1 [installed]
    Arch Linux ARM PGP keyring
extra/gnome-keyring 1:3.28.2-1 (gnome)
    Stores passwords and encryption keys
extra/libgnome-keyring 3.12.0-3
    GNOME keyring client library
extra/python2-gnomekeyring 2.32.0-17
    Python bindings for libgnome-keyring
community/debian-archive-keyring 2017.7-1
    GnuPG archive keys of the Debian archive
community/gnome-keyring-sharp 1.0.2-6
    A fully managed implementation of libgnome-keyring
community/jetring 0.25-1
    gpg keyring maintenance using changesets
community/python-keyring 13.2.1-1
    Store and access your passwords safely.
community/python-keyrings-alt 1:3.1-1
    Alternate keyring implementations
community/ubuntu-keyring 2018.02.28-1
    GnuPG keys of the Ubuntu archive

TermuxArch keys archlinux-keyring archlinuxarm-keyring gen.v1.6 id267843448814: DONE 🏁


==> Running TermuxArch pci  gen.v1.6 id267843448814 …

:: Synchronizing package databases...
 core is up to date
 extra is up to date
 community is up to date
 alarm is up to date
 aur is up to date
:: Starting full system upgrade...
error: duplicated database entry 'haveged'
 there is nothing to do

TermuxArch pci  gen.v1.6 id267843448814: DONE 🏁


==> Generating locales...
  en_US.UTF-8... done
Generation complete.

 🕛 > 🕤 Arch Linux in Termux is installed and configured 📲  The following files have been updated to the newest version.

ar/startarch+ar
ar/bin/we
ar/root/bin/README.md
ar/root/bin/addauser
ar/root/bin/addauserps
ar/root/bin/addauserpsc
ar/root/bin/ae
ar/root/bin/cdtd
ar/root/bin/cdth
ar/root/bin/ch
ar/root/bin/dfa
ar/root/bin/exd
ar/root/bin/fibs
ar/root/bin/ga
ar/root/bin/gcl
ar/root/bin/gcm
ar/root/bin/gp
ar/root/bin/gpl
ar/root/bin/keys
ar/root/bin/pc
ar/root/bin/pci
ar/root/bin/t
ar/root/bin/thstartarch+ar
ar/root/bin/tour
ar/root/bin/trim
ar/root/bin/v
ar/root/bin/yt

 🕛 > 🕙 Releasing termux-wake-lock: DONE

 🕛 > 🕥 Use startarch+ar to launch Arch Linux in Termux PRoot.  Alternatively, run ~/ar/startarch+ar in a BASH shell to start Arch Linux in Termux PRoot for future sessions.  See startarch+ar help for usage information.

 🕛 > 🕦 startarch+ar copied to /data/data/com.termux/files/home/bin.

 🕛 = 🕛 Information about "Starting Arch Linux from Termux?" at https://github.com/sdrausty/TermuxArch/issues/25.  Use tour to run a very short tour to get to know the new Arch Linux in Termux PRoot environment you just set up a little bit better.  If there was more than one error during the update procedure and you would like to refresh the installation, use setupTermuxArch.sh refresh.  This will update and recreate the configuration provided.  The TermuxArch command keys helps install and generate Arch Linux keyring keys.

Arch Linux in Termux PRoot is installed in /data/data/com.termux/files/home/ar.  This project is in active development.  Contributions to this project are welcome; See https://sdrausty.github.io/TermuxArch/CONTRIBUTORS for information.  The documentation repository for TermuxArch https://sdrausty.github.io/TermuxArch/docs/ is a Termux Arch submodule that is located at https://github.com/sdrausty/docsTermuxArch.  Pull requests and contributions through the issues pages are open to improve the ux (user experience) and this Termux PRoot installation script.

Use ~/ar/startarch+ar and startarch+ar in a BASH shell to launch Arch Linux in Termux PRoot for future sessions.  If you are new to *nix, http://tldp.org has *nix documentation.  See https://wiki.archlinux.org/index.php/IRC_channel for available Arch Linux IRC channels.


Welcome to Arch Linux in Termux!
Install a package: pacman -S package
More  information: pacman -[D|F|Q|R|S|T|U]h
Search   packages: pacman -Ss query
Upgrade  packages: pacman -Syu

Chat: webchat.freenode.net/ #termux
Help: info query and man query
IRC:  wiki.archlinux.org/index.php/IRC_channel

[09:49 ar ]$ cd /var/lib/pacman/local/
[09:51 local ]$ l haveged-1.9.*
haveged-1.9.1-4.1:
total 20
drwxr-xr-x   2 root 4096 Aug 10 01:13 .
drwxr-xr-x 141 root 4096 Aug 11 09:49 ..
-rw-r--r--   1 root  354 Aug  1 03:26 desc
-rw-r--r--   1 root  394 Aug  1 03:26 files
-rw-r--r--   1 root  835 May 28 22:22 mtree

haveged-1.9.2-1:
total 20
drwxr-xr-x   2 root 4096 Aug 10 00:30 .
drwxr-xr-x 141 root 4096 Aug 11 09:49 ..
-rw-r--r--   1 root  351 Aug 10 00:30 desc
-rw-r--r--   1 root  394 Aug 10 00:30 files
-rw-r--r--   1 root  834 Aug  5 16:37 mtree
[09:51 local ]$ rf haveged-1.9.1-4.1/
[09:51 local ]$ e

Share Your Arch Linux in Termux Experience!

Chat: webchat.freenode.net/ #termux
Help: info query and man query
IRC:  wiki.archlinux.org/index.php/IRC_channel


Usage:  startarch+ar Start Arch Linux as root.  This account should only be reserved for system administration.

        startarch+ar command command Run Arch Linux command from Termux as root user.

        startarch+ar login user Login as user.  Use addauser user first to create a user and the user's home directory.

        startarch+ar raw Construct the startarch proot statement.  For example startarch raw su - user will login to Arch Linux as user.  Use addauser user first to create a user and the user's home directory.

        startarch+ar su user command Login as user and execute command.  Use addauser user first to create a user and the user's home directory.


Arch Linux in Termux PRoot is installed in /data/data/com.termux/files/home/ar.  This project is in active development.  Contributions to this project are welcome; See https://sdrausty.github.io/TermuxArch/CONTRIBUTORS for information.  The documentation repository for TermuxArch https://sdrausty.github.io/TermuxArch/docs/ is a Termux Arch submodule that is located at https://github.com/sdrausty/docsTermuxArch.  Pull requests and contributions through the issues pages are open to improve the ux (user experience) and this Termux PRoot installation script.

Use ~/ar/startarch+ar and startarch+ar in a BASH shell to launch Arch Linux in Termux PRoot for future sessions.  If you are new to *nix, http://tldp.org has *nix documentation.  See https://wiki.archlinux.org/index.php/IRC_channel for available Arch Linux IRC channels.
 🕛 > 🕜 TermuxArch gen.v1.6 id267843448814 integrity: OK

setupTermuxArch.sh re ar gen.v1.6 id267843448814: DONE 🏁

$ ./setupTermuxArch.sh re ar

 🕛 > 🕛 setupTermuxArch gen.v1.6 id267843448814 will refresh your TermuxArch files in /data/data/com.termux/files/home/ar.  Ensure background data is not restricted.  Run bash setupTermuxArch.sh help for additional information.  Check the wireless connection if you do not see one o'clock 🕐 below.  Checking prerequisites…

 🕛 > 🕧 Prerequisites: OK  Downloading TermuxArch…

setupTermuxArch.sha5 100%[=====================>]     153  --.-KB/s    in 0s
setupTermuxArch.tar. 100%[=====================>]  22.50K  --.-KB/s    in 0.1s

 🕛 > 🕐 TermuxArch download: OK

 🕛 > 🕜 TermuxArch gen.v1.6 id267843448814 integrity: OK

 🕛 > 🕒 Activating termux-wake-lock: DONE


==> Running setupTermuxArch.sh re ar 📲

:: Removing redundant packages for Termux PRoot installation…

==> Running TermuxArch keys archlinux-keyring archlinuxarm-keyring gen.v1.6 id267843448814…

When gpg: Generating pacman keyring master key appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.

The program pacman-key will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When gpg: Generating pacman keyring master key appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling the device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  Use bash ~/ar/bin/we in a new Termux session to and watch entropy on device.

==> Running pacman-key --init…

==> Running pacman -S archlinux-keyring archlinuxarm-keyring --noconfirm --color=always…
warning: archlinux-keyring-20180627-1 is up to date -- reinstalling
warning: archlinuxarm-keyring-20140119-1 is up to date -- reinstalling
resolving dependencies...
looking for conflicting packages...

Packages (2) archlinux-keyring-20180627-1  archlinuxarm-keyring-20140119-1

Total Installed Size:  0.87 MiB
Net Upgrade Size:      0.00 MiB

:: Proceed with installation? [Y/n]
(2/2) checking keys in keyring                     [#########################] 100%
(2/2) checking package integrity                   [#########################] 100%
(2/2) loading package files                        [#########################] 100%
(2/2) checking for file conflicts                  [#########################] 100%
(2/2) checking available disk space                [#########################] 100%
:: Processing package changes...
(1/2) reinstalling archlinux-keyring               [#########################] 100%
==> Appending keys from archlinux.gpg...
==> Locally signing trusted keys in keyring...
  -> Locally signing key DDB867B92AA789C165EEFA799B729B06A680C281...
  -> Locally signing key 684148BB25B49E986A4944C55184252D824B18E8...
  -> Locally signing key 91FFE0700E80619CEB73235CA88E23E377514E00...
  -> Locally signing key AB19265E5D7D20687D303246BA1DFB64FFF979E7...
  -> Locally signing key 0E8B644079F599DFC1DDC3973348882F6AC6A4C2...
==> Importing owner trust values...
==> Disabling revoked keys in keyring...
  -> Disabling key 7FA647CD89891DEDC060287BB9113D1ED21E1A55...
  -> Disabling key D4DE5ABDE2A7287644EAC7E36D1A9E70E19DAA50...
  -> Disabling key 40440DC037C05620984379A6761FAD69BA06C6A9...
  -> Disabling key B1F2C889CB2CCB2ADA36D963097D629E437520BD...
  -> Disabling key BC1FBE4D2826A0B51E47ED62E2539214C6C11350...
  -> Disabling key 63F395DE2D6398BBE458F281F2DBB4931985A992...
  -> Disabling key 8F76BEEA0289F9E1D3E229C05F946DED983D4366...
  -> Disabling key 4FCF887689C41B09506BE8D5F3E1D5C5D30DB0AD...
  -> Disabling key 81D7F8241DB38BC759C80FCE3A726C6170E80477...
  -> Disabling key 5E7585ADFF106BFFBBA319DC654B877A0864983E...
  -> Disabling key 50F33E2E5B0C3D900424ABE89BDCF497A4BBCC7F...
  -> Disabling key E7210A59715F6940CF9A4E36A001876699AD6E84...
  -> Disabling key F5A361A3A13554B85E57DDDAAF7EF7873CFD4BB6...
  -> Disabling key 40776A5221EF5AD468A4906D42A1DB15EC133BAD...
  -> Disabling key 8CF934E339CAD8ABF342E822E711306E3C4F88BC...
  -> Disabling key 5696C003B0854206450C8E5BE613C09CB4440678...
  -> Disabling key 9515D8A8EAB88E49BB65EDBCE6B456CAF15447D5...
  -> Disabling key 4A8B17E20B88ACA61860009B5CED81B7C2E5C0D2...
  -> Disabling key 0B20CA1931F5DA3A70D0F8D2EA6836E1AB441196...
  -> Disabling key 34C5D94FE7E7913E86DC427E7FB1A3800C84C0A5...
  -> Disabling key 39F880E50E49A4D11341E8F939E4F17F295AFBF4...
  -> Disabling key 66BD74A036D522F51DD70A3C7F2A16726521E06D...
  -> Disabling key DBE7D3DD8C81D58D0A13D0E76BC26A17B9B7018A...
  -> Disabling key 07DFD3A0BC213FA12EDC217559B3122E2FA915EC...
  -> Disabling key 44D4A033AC140143927397D47EFD567D4C7EA887...
  -> Disabling key 27FFC4769E19F096D41D9265A04F9397CDFD6BB0...
  -> Disabling key 8840BD07FC24CB7CE394A07CCF7037A4F27FB7DA...
==> Updating trust database...
gpg: next trustdb check due at 2018-12-13
(2/2) reinstalling archlinuxarm-keyring            [#########################] 100%
==> Appending keys from archlinuxarm.gpg...
==> Locally signing trusted keys in keyring...
  -> Locally signing key 02922214DE8981D14DC2ACABBC704E86B823CD25...
  -> Locally signing key 69DD6C8FD314223E14362848BF7EEF7A9C6B5765...
  -> Locally signing key 9D22B7BB678DC056B1F7723CB55C5315DCD9EE1A...
==> Importing owner trust values...
==> Updating trust database...
gpg: next trustdb check due at 2018-12-13
:: Running post-transaction hooks...
(1/1) Arming ConditionNeedsUpdate...

When Appending keys from archlinux.gpg appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.

The program pacman-key will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When Appending keys from archlinux.gpg appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling the device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  Use bash ~/ar/bin/we in a new Termux session to watch entropy on device.

==> Running pacman-key --populate…
==> Appending keys from archlinux.gpg...
==> Appending keys from archlinuxarm.gpg...
==> Locally signing trusted keys in keyring...
  -> Locally signing key DDB867B92AA789C165EEFA799B729B06A680C281...
  -> Locally signing key 02922214DE8981D14DC2ACABBC704E86B823CD25...
  -> Locally signing key 684148BB25B49E986A4944C55184252D824B18E8...
  -> Locally signing key 91FFE0700E80619CEB73235CA88E23E377514E00...
  -> Locally signing key 69DD6C8FD314223E14362848BF7EEF7A9C6B5765...
  -> Locally signing key AB19265E5D7D20687D303246BA1DFB64FFF979E7...
  -> Locally signing key 0E8B644079F599DFC1DDC3973348882F6AC6A4C2...
  -> Locally signing key 9D22B7BB678DC056B1F7723CB55C5315DCD9EE1A...
==> Importing owner trust values...
==> Disabling revoked keys in keyring...
  -> Disabling key 7FA647CD89891DEDC060287BB9113D1ED21E1A55...
  -> Disabling key D4DE5ABDE2A7287644EAC7E36D1A9E70E19DAA50...
  -> Disabling key 40440DC037C05620984379A6761FAD69BA06C6A9...
  -> Disabling key B1F2C889CB2CCB2ADA36D963097D629E437520BD...
  -> Disabling key BC1FBE4D2826A0B51E47ED62E2539214C6C11350...
  -> Disabling key 63F395DE2D6398BBE458F281F2DBB4931985A992...
  -> Disabling key 8F76BEEA0289F9E1D3E229C05F946DED983D4366...
  -> Disabling key 4FCF887689C41B09506BE8D5F3E1D5C5D30DB0AD...
  -> Disabling key 81D7F8241DB38BC759C80FCE3A726C6170E80477...
  -> Disabling key 5E7585ADFF106BFFBBA319DC654B877A0864983E...
  -> Disabling key 50F33E2E5B0C3D900424ABE89BDCF497A4BBCC7F...
  -> Disabling key E7210A59715F6940CF9A4E36A001876699AD6E84...
  -> Disabling key F5A361A3A13554B85E57DDDAAF7EF7873CFD4BB6...
  -> Disabling key 40776A5221EF5AD468A4906D42A1DB15EC133BAD...
  -> Disabling key 8CF934E339CAD8ABF342E822E711306E3C4F88BC...
  -> Disabling key 5696C003B0854206450C8E5BE613C09CB4440678...
  -> Disabling key 9515D8A8EAB88E49BB65EDBCE6B456CAF15447D5...
  -> Disabling key 4A8B17E20B88ACA61860009B5CED81B7C2E5C0D2...
  -> Disabling key 0B20CA1931F5DA3A70D0F8D2EA6836E1AB441196...
  -> Disabling key 34C5D94FE7E7913E86DC427E7FB1A3800C84C0A5...
  -> Disabling key 39F880E50E49A4D11341E8F939E4F17F295AFBF4...
  -> Disabling key 66BD74A036D522F51DD70A3C7F2A16726521E06D...
  -> Disabling key DBE7D3DD8C81D58D0A13D0E76BC26A17B9B7018A...
  -> Disabling key 07DFD3A0BC213FA12EDC217559B3122E2FA915EC...
  -> Disabling key 44D4A033AC140143927397D47EFD567D4C7EA887...
  -> Disabling key 27FFC4769E19F096D41D9265A04F9397CDFD6BB0...
  -> Disabling key 8840BD07FC24CB7CE394A07CCF7037A4F27FB7DA...
==> Updating trust database...
gpg: next trustdb check due at 2018-12-13

==> Running pacman -Ss keyring --color=always…
core/archlinux-keyring 20180627-1 [installed]
    Arch Linux PGP keyring
core/archlinuxarm-keyring 20140119-1 [installed]
    Arch Linux ARM PGP keyring
extra/gnome-keyring 1:3.28.2-1 (gnome)
    Stores passwords and encryption keys
extra/libgnome-keyring 3.12.0-3
    GNOME keyring client library
extra/python2-gnomekeyring 2.32.0-17
    Python bindings for libgnome-keyring
community/debian-archive-keyring 2017.7-1
    GnuPG archive keys of the Debian archive
community/gnome-keyring-sharp 1.0.2-6
    A fully managed implementation of libgnome-keyring
community/jetring 0.25-1
    gpg keyring maintenance using changesets
community/python-keyring 13.2.1-1
    Store and access your passwords safely.
community/python-keyrings-alt 1:3.1-1
    Alternate keyring implementations
community/ubuntu-keyring 2018.02.28-1
    GnuPG keys of the Ubuntu archive

TermuxArch keys archlinux-keyring archlinuxarm-keyring gen.v1.6 id267843448814: DONE 🏁


==> Running TermuxArch pci  gen.v1.6 id267843448814 …

:: Synchronizing package databases...
 core is up to date
 extra is up to date
 community is up to date
 alarm is up to date
 aur is up to date
:: Starting full system upgrade...
 there is nothing to do

TermuxArch pci  gen.v1.6 id267843448814: DONE 🏁


==> Generating locales...
  en_US.UTF-8... done
Generation complete.

 🕛 > 🕤 Arch Linux in Termux is installed and configured 📲  The following files have been updated to the newest version.

ar/startarch+ar
ar/bin/we
ar/root/bin/README.md
ar/root/bin/addauser
ar/root/bin/addauserps
ar/root/bin/addauserpsc
ar/root/bin/ae
ar/root/bin/cdtd
ar/root/bin/cdth
ar/root/bin/ch
ar/root/bin/dfa
ar/root/bin/exd
ar/root/bin/fibs
ar/root/bin/ga
ar/root/bin/gcl
ar/root/bin/gcm
ar/root/bin/gp
ar/root/bin/gpl
ar/root/bin/keys
ar/root/bin/pc
ar/root/bin/pci
ar/root/bin/t
ar/root/bin/thstartarch+ar
ar/root/bin/tour
ar/root/bin/trim
ar/root/bin/v
ar/root/bin/yt

 🕛 > 🕙 Releasing termux-wake-lock: DONE

 🕛 > 🕥 Use startarch+ar to launch Arch Linux in Termux PRoot.  Alternatively, run ~/ar/startarch+ar in a BASH shell to start Arch Linux in Termux PRoot for future sessions.  See startarch+ar help for usage information.

 🕛 > 🕦 startarch+ar copied to /data/data/com.termux/files/home/bin.

 🕛 = 🕛 Information about "Starting Arch Linux from Termux?" at https://github.com/sdrausty/TermuxArch/issues/25.  Use tour to run a very short tour to get to know the new Arch Linux in Termux PRoot environment you just set up a little bit better.  If there was more than one error during the update procedure and you would like to refresh the installation, use setupTermuxArch.sh refresh.  This will update and recreate the configuration provided.  The TermuxArch command keys helps install and generate Arch Linux keyring keys.

Arch Linux in Termux PRoot is installed in /data/data/com.termux/files/home/ar.  This project is in active development.  Contributions to this project are welcome; See https://sdrausty.github.io/TermuxArch/CONTRIBUTORS for information.  The documentation repository for TermuxArch https://sdrausty.github.io/TermuxArch/docs/ is a Termux Arch submodule that is located at https://github.com/sdrausty/docsTermuxArch.  Pull requests and contributions through the issues pages are open to improve the ux (user experience) and this Termux PRoot installation script.

Use ~/ar/startarch+ar and startarch+ar in a BASH shell to launch Arch Linux in Termux PRoot for future sessions.  If you are new to *nix, http://tldp.org has *nix documentation.  See https://wiki.archlinux.org/index.php/IRC_channel for available Arch Linux IRC channels.


Welcome to Arch Linux in Termux!
Install a package: pacman -S package
More  information: pacman -[D|F|Q|R|S|T|U]h
Search   packages: pacman -Ss query
Upgrade  packages: pacman -Syu

Chat: webchat.freenode.net/ #termux
Help: info query and man query
IRC:  wiki.archlinux.org/index.php/IRC_channel

[10:03 ar ]$ # error: duplicated database entry 'haveged'
[10:04 ar ]$ # https://duckduckgo.com/?q=duplicate+database+entry+arch+linux       [10:05 ar ]$